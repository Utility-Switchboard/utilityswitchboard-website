{"version":3,"file":"component---src-templates-gas-electricity-provider-main-page-template-tsx-12e136b261de75ecb38e.js","mappings":"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","sources":["webpack://utilityswitchboard-website/./src/resources/category-icons.ts","webpack://utilityswitchboard-website/./src/templates/GasElectricityProviderMainPage-template.tsx"],"sourcesContent":["interface iconProps { [ key: string ] : string }\n\nconst categoryIcons: iconProps = {\n   \"contact\": \"fa-solid fa-comments\",\n   \"warm-home-discount\": \"fa-solid fa-snowflake\",\n   \"login\": \"fa-solid fa-right-to-bracket\",\n   \"review\": \"fa-solid fa-ranking-star\",\n   \"moving-home\": \"fa-solid fa-box-open\",\n   \"top-up\": \"fa-sharp fa-solid fa-credit-card\",\n   \"business\": \"fa-solid fa-briefcase\"\n}\n\nexport default categoryIcons","import { graphql, HeadFC } from \"gatsby\";\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumbs from \"../components/breadcrumbs/breadcrumbs\";\nimport GetHelpSidebarCTA from \"../components/ctas/sidebar/get-help-sidebar/get-help-sidebar\";\nimport Footer from \"../components/footer/footer\";\nimport HeroCTA from \"../components/hero-cta/hero-cta\";\nimport Navigation from \"../components/navigation/navigation\";\nimport SEO from \"../components/SEO/seo\";\nimport StylesComponent from \"../components/styles\";\nimport categoryIcons from \"../resources/category-icons\";\n\n// CSS\nimport '../sass/page-specific/content-template.scss'\nimport '../sass/page-specific/provider-main-page.scss'\n\ninterface pageProps {\n   contentfulGasElectricityProviderMainPage: {\n      slug: string,\n      title: string,\n      category: string,\n      updatedAt: string,\n      logo: {\n         file: {\n            url: string\n         }\n      },\n      metaDescription: {\n         internal: {\n            content: string\n         }\n      },\n      provider: string\n   },\n   allContentfulGasElectricityProviderStandardPage: {\n      edges: {\n         node: {\n            slug: string,\n            category: string,\n            navigation: {\n               internal: {\n                  content: string\n               }\n            }\n         }\n      }[]\n   }\n}\n\nconst GasElectricityProviderMainPageTemplate = ({ data }: { data: pageProps }) => {\n   // State\n   const [selectedCategory, setSelectedCategory] = useState<number>(0)\n\n   const page = data.contentfulGasElectricityProviderMainPage;\n   const related_pages = data.allContentfulGasElectricityProviderStandardPage.edges;\n\n   // Title formatting\n   const title_parts = page.title.split(\"-\")\n\n   let title_part_1 = title_parts[0]\n   let title_part_2 = title_parts.slice(1).join(\"-\") \n\n   //-- Specific cases\n   if(page.provider === 'Co-operative Energy') {\n      title_part_1 = title_parts[0] + \"-\" + title_parts[1]\n      title_part_2 = title_parts.slice(2).join(\"-\")\n   }\n\n   // Provider\n   const slug = page.slug\n   const provider_uri = slug.split(\"/\")[2]\n\n   // Variables\n   const logo_url = page.logo.file.url\n   const category = page.category\n\n   return (\n      <React.Fragment>\n         <StylesComponent/>\n         <Navigation/>\n\n         {/** HERO SECTION **/}\n         <div className=\"content-hero-outer-container\">\n            <div className=\"content-hero-inner-container container-width\">\n               <span>\n                  \n                  <h1>{title_part_1}<br/><span>{title_part_2}</span></h1>\n\n                  <p>{page.metaDescription.internal.content}</p>\n\n                  <br/>\n\n                  <HeroCTA/>\n               </span>\n               \n               <div className=\"content-hero-provider-logo-container\">\n                  <img\n                     alt={`${page.provider} logo`}\n                     title={`${page.provider} logo`}\n                     src={`https:${logo_url}`}\n                  />\n               </div>\n            </div>\n         </div>\n\n         <div className=\"content-outer-container\">\n            <div className=\"content-inner-container container-width\">\n               <div className=\"content-container\">\n                  <Breadcrumbs location={slug}/>\n\n\n                  <h2>Get help by category</h2>\n\n                  <p>For all you {page.provider} queries, take a look at the below grid to find what you're looking for.</p>\n\n                  {/* Large devices version */}\n                  <div className=\"provider-navigation-grid-container\">\n                     <ul className=\"provider-navigation-category-options\">\n                        {related_pages.map((page, i) => (\n                           <li onClick={() => setSelectedCategory(i)} className={selectedCategory === i ? 'active' : 'inactive'}>\n                              <i className={categoryIcons[page.node.category]}/> {page.node.category.replaceAll(\"-\", \" \")}\n                           </li>\n                        ))}\n                     </ul>\n                     <div className=\"provider-navigation-category-results-container\">\n                        <h3>{page.provider} {related_pages[selectedCategory].node.category.replaceAll(\"-\", \" \")}</h3>\n\n                        <ul className=\"provider-navigation-category-results-list\">\n                           {Object.entries(JSON.parse(related_pages[selectedCategory].node.navigation.internal.content)).map(option => (\n                              <a href={\"/\" + related_pages[selectedCategory].node.slug + option[1]}><span><i className=\"fa-solid fa-right-long\"/>{option[0]}</span></a>\n                           ))}\n                        </ul>\n                     </div>\n                  </div>\n\n                  {/* Medium / small devices version */}\n                  <div className=\"sm-provider-navigation-grid-container\">\n                     {\n                        related_pages.map((page, i) => (\n                           <React.Fragment>\n                              <input \n                                 checked={selectedCategory === i}\n                                 type=\"radio\"\n                                 className=\"standard-accordion-trigger invisible\"\n                                 name=\"page-list\"\n                                 value={i}\n                                 id={`query_${i}`}\n                                 onChange={() => setSelectedCategory(i)}\n                              />\n                              \n                              <label className=\"standard-accordion-wrapper pink\" htmlFor={'query_' + i}>\n                                 <div className=\"standard-accordion-header\"><span style={{textTransform: 'capitalize'}}>{page.node.category.replaceAll(\"-\", \" \")}</span></div>\n\n                                 <div className=\"standard-accordion-content\">\n                                    <ul className=\"provider-navigation-category-results-list sm-pages-list\">\n                                       {Object.entries(JSON.parse(related_pages[selectedCategory].node.navigation.internal.content)).map(option => (\n                                          <a href={\"/\" + related_pages[selectedCategory].node.slug + option[1]}>{option[0]}</a>\n                                       ))}\n                                    </ul>\n                                 </div>\n                              </label> \n                           </React.Fragment>\n                        ))\n                     }\n                  </div>\n\n               </div>\n               <div className=\"content-sidebar-container with-margin\">\n                  <div className=\"content-sidebar-sticky-wrapper\">\n                     <GetHelpSidebarCTA/>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <Footer/>\n      </React.Fragment>\n   )\n}\n\nexport default GasElectricityProviderMainPageTemplate\n\nexport const pageQuery = graphql`\n   query pageBySlug ( $slug: String!, $provider: String! ) {\n      contentfulGasElectricityProviderMainPage ( slug: { eq: $slug }) {\n         metaDescription {\n            internal {\n               content\n            }\n         }\n         title\n         slug\n         category\n         updatedAt\n         provider\n         logo {\n            file {\n               url\n            }\n         }\n      }\n      allContentfulGasElectricityProviderStandardPage ( filter: { provider: { eq: $provider } } ) {\n         edges {\n            node {\n               slug,\n               category,\n               navigation {\n                  internal {\n                     content\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nexport const Head = ({ data }: { data: pageProps }) => {\n   const page = data.contentfulGasElectricityProviderMainPage\n   return (\n      <SEO\n         title={page.title}\n         metaDescription={page.metaDescription.internal.content}\n         slug={page.slug}\n      />\n   )\n}"],"names":["_ref","data","selectedCategory","setSelectedCategory","useState","page","contentfulGasElectricityProviderMainPage","related_pages","allContentfulGasElectricityProviderStandardPage","edges","title_parts","title","split","title_part_1","title_part_2","slice","join","provider","slug","logo_url","logo","file","url","category","React","StylesComponent","Navigation","className","metaDescription","internal","content","HeroCTA","alt","src","Breadcrumbs","location","map","i","onClick","categoryIcons","node","replaceAll","Object","entries","JSON","parse","navigation","option","href","checked","type","name","value","id","onChange","htmlFor","style","textTransform","GetHelpSidebarCTA","Footer","Head","_ref2","SEO"],"sourceRoot":""}