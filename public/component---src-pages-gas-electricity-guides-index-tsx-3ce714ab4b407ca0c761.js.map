{"version":3,"file":"component---src-pages-gas-electricity-guides-index-tsx-3ce714ab4b407ca0c761.js","mappings":"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","sources":["webpack://utilityswitchboard-website/./src/pages/gas-electricity/guides/index.tsx"],"sourcesContent":["import { graphql, HeadFC } from \"gatsby\";\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumbs from \"../../../components/breadcrumbs/breadcrumbs\";\nimport GetHelpSidebarCTA from \"../../../components/ctas/sidebar/get-help-sidebar/get-help-sidebar\";\nimport Footer from \"../../../components/footer/footer\";\nimport HeroCTA from \"../../../components/hero-cta/hero-cta\";\nimport Navigation from \"../../../components/navigation/navigation\";\nimport SEO from \"../../../components/SEO/seo\";\n\n// CSS\nimport StylesComponent from \"../../../components/styles\";\nimport \"../../../sass/page-specific/guides-index.scss\";\n\ninterface pageProps {\n   allContentfulGasElectricityGuideStandardPage: {\n      edges: {\n         node: {\n            slug: string,\n            category: string,\n            title: string\n         }\n      }[]\n   }\n}\n\ninterface filterSizes { [ key: string ]: number }\n\nconst Guides = ({ data }: { data: pageProps }) => {\n   const [filter, setFilter] = useState<string>('')\n   const [filterSizes, setFilterSizes] = useState<filterSizes>({})\n   const [showMaxRecords, setShowMaxRecords] = useState<number>(8)\n\n   const pages = data.allContentfulGasElectricityGuideStandardPage.edges\n\n   useEffect(() => {\n      let new_filter_sizes: filterSizes = {\n         \"\": 0\n      }\n\n      for (let i = 0; i < pages.length; i++) {\n         const page = pages[i].node;\n         \n         if(new_filter_sizes[page.category] === undefined) {\n            new_filter_sizes[page.category] = 1\n         } else {\n            new_filter_sizes[page.category] += 1\n         }\n\n         new_filter_sizes[\"\"] += 1\n      }\n\n      setFilterSizes(new_filter_sizes)\n   }, [])\n\n   useEffect(() => {\n      let new_figure = 8;\n\n      if(new_figure > filterSizes[filter]) {\n         new_figure = filterSizes[filter]\n      }\n\n      setShowMaxRecords(new_figure)\n   }, [filter])\n\n   const generateContent = () => {\n      let jsx: any = []\n\n      let filtered_array = pages\n      \n      if(filter !== '') {\n         filtered_array = pages.filter((e => e.node.category === filter))\n      }\n      \n\n      if(filtered_array.length > 0 && showMaxRecords <= filterSizes[filter]) {\n         for (let i = 0; i < showMaxRecords; i++) {\n            const element = filtered_array[i];\n            const page = element.node;\n            \n            jsx.push(\n               <a className=\"guide-card-container\" href={`/${page.slug}`}>\n                  <div className=\"guide-card-image-header\"/>\n                  <div className=\"guide-card-content\">\n                     <span>\n                        <p className=\"guide-card-title\">{page.title}</p>\n                        <span className=\"guide-card-category\">{page.category.charAt(0).toUpperCase() + page.category.slice(1)}</span>\n                     </span>\n\n                     <p className=\"guide-card-arrow\">Read guide</p>\n                  </div>\n                  \n               </a>\n            )\n\n         }\n      }\n      return jsx;\n   }\n\n   const handleLoadMoreRecords = () => {\n      let new_figure = showMaxRecords + 8;\n\n      if(new_figure > filterSizes[filter]) {\n         new_figure = filterSizes[filter]\n      }\n\n      setShowMaxRecords(new_figure)\n   }\n\n   return (\n      <React.Fragment>\n         <StylesComponent/>\n         <Navigation/>\n\n         {/** HERO SECTION **/}\n         <div className=\"content-hero-outer-container\">\n            <div className=\"content-hero-inner-container container-width\">\n               <span>\n                  <h1>Gas & electricity<br/><span>Guides</span></h1>\n\n                  <p>Read up about a wide range of energy related topics, from renewable energy to meters. Learn more and save money along the way!</p>\n\n                  <br/>\n\n                  <HeroCTA/>\n               </span>\n            </div>\n         </div>\n\n         <div className=\"content-outer-container\">\n            <div className=\"content-inner-container container-width\">\n               <div className=\"content-container\">\n                  <Breadcrumbs location=\"gas-electricity/guides\"/>\n\n                  <p>Select a category to filter guides</p>\n\n                  <select\n                     className=\"standard-select\"\n                     value={filter}\n                     onChange={(e) => setFilter(e.target.value)}\n                  >\n                     <option value=\"\">All guides</option>\n                     <option value=\"business\">Business</option>\n                     <option value=\"distribution\">Distribution</option>\n                     <option value=\"environment\">Environment</option>\n                     <option value=\"meters\">Meters</option>\n                     <option value=\"schemes\">Schemes</option>\n                     <option value=\"switching\">Switching</option>\n                     <option value=\"tariffs\">Tariffs</option>\n                  </select>\n\n                  <br/>\n                  <br/>\n\n                  <div className=\"separator\" style={{justifyContent: \"flex-start\"}}/>\n\n                  <br/>\n                  <br/>\n\n                  <div className=\"guide-results-container\">\n                     {generateContent()}\n                  </div>\n\n                  {\n                     filterSizes[filter] > showMaxRecords ? (\n                        <center>\n                           <button \n                              className=\"standard-button purple\"\n                              onClick={handleLoadMoreRecords}\n                              style={{marginTop: 60}}\n                           >\n                              Load more guides\n                           </button>\n                        </center>\n                     ) : null\n                  }\n                  \n               </div>\n\n               <div className=\"content-sidebar-container with-margin\">\n                  <div className=\"content-sidebar-sticky-wrapper\">\n                     <GetHelpSidebarCTA/>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n\n         <Footer/>\n      </React.Fragment>\n   )\n}\n\nexport default Guides\n\nexport const Head: HeadFC = () => (\n   <SEO\n      metaDescription=\"Using our provider guides, expert customer service line and full in-depth guides, become and energy expert and start saving Â£100s per year on your bills.\"\n      title=\"UK Gas & electricity guides\"\n      titleTemplate=\"%s - Utility Switchboard\"\n      slug=\"gas-electricity/guides\"\n   />\n )\n\nexport const pageQuery = graphql`\n   query relatedPages {\n      allContentfulGasElectricityGuideStandardPage {\n         edges {\n            node {\n               slug\n               title\n               category\n            }\n         }\n      }\n   }\n`"],"names":["_ref","data","filter","setFilter","useState","filterSizes","setFilterSizes","showMaxRecords","setShowMaxRecords","pages","allContentfulGasElectricityGuideStandardPage","edges","useEffect","new_filter_sizes","i","length","page","node","undefined","category","new_figure","React","StylesComponent","Navigation","className","HeroCTA","Breadcrumbs","location","value","onChange","e","target","style","justifyContent","jsx","filtered_array","push","href","slug","title","charAt","toUpperCase","slice","generateContent","onClick","marginTop","GetHelpSidebarCTA","Footer","Head","SEO","metaDescription","titleTemplate"],"sourceRoot":""}