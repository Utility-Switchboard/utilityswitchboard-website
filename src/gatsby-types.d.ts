/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type ContentfulAsset = ContentfulReference & Node & RemoteFile & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly file: Maybe<ContentfulAssetFile>;
  readonly filename: Scalars['String'];
  readonly filesize: Maybe<Scalars['Int']>;
  /** Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info. */
  readonly gatsbyImage: Maybe<Scalars['GatsbyImageData']>;
  readonly gatsbyImageData: Maybe<Scalars['GatsbyImageData']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly mimeType: Scalars['String'];
  readonly node_locale: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly placeholderUrl: Maybe<Scalars['String']>;
  readonly publicUrl: Scalars['String'];
  readonly resize: Maybe<RemoteFileResize>;
  readonly size: Maybe<Scalars['Int']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulAssetSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
  readonly url: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};


type ContentfulAsset_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulAsset_gatsbyImageArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  formats?: InputMaybe<ReadonlyArray<RemoteFileFormat>>;
  height: InputMaybe<Scalars['Int']>;
  layout?: InputMaybe<RemoteFileLayout>;
  outputPixelDensities?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder?: InputMaybe<RemoteFilePlaceholder>;
  quality?: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cornerRadius?: InputMaybe<Scalars['Int']>;
  cropFocus: InputMaybe<ContentfulImageCropFocus>;
  formats?: InputMaybe<ReadonlyArray<InputMaybe<GatsbyImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  layout: InputMaybe<GatsbyImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<GatsbyImagePlaceholder>;
  quality: InputMaybe<Scalars['Int']>;
  resizingBehavior: InputMaybe<ImageResizingBehavior>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_resizeArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  format?: InputMaybe<RemoteFileFormat>;
  height: InputMaybe<Scalars['Int']>;
  quality?: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulAssetConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulAssetEdge>;
  readonly group: ReadonlyArray<ContentfulAssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulAsset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulAssetConnection_distinctArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetConnection_groupArgs = {
  field: ContentfulAssetFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulAssetConnection_maxArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetConnection_minArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetConnection_sumArgs = {
  field: ContentfulAssetFieldSelector;
};

type ContentfulAssetEdge = {
  readonly next: Maybe<ContentfulAsset>;
  readonly node: ContentfulAsset;
  readonly previous: Maybe<ContentfulAsset>;
};

type ContentfulAssetFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly createdAt: InputMaybe<FieldSelectorEnum>;
  readonly description: InputMaybe<FieldSelectorEnum>;
  readonly file: InputMaybe<ContentfulAssetFileFieldSelector>;
  readonly filename: InputMaybe<FieldSelectorEnum>;
  readonly filesize: InputMaybe<FieldSelectorEnum>;
  readonly gatsbyImage: InputMaybe<FieldSelectorEnum>;
  readonly gatsbyImageData: InputMaybe<FieldSelectorEnum>;
  readonly height: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly mimeType: InputMaybe<FieldSelectorEnum>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly placeholderUrl: InputMaybe<FieldSelectorEnum>;
  readonly publicUrl: InputMaybe<FieldSelectorEnum>;
  readonly resize: InputMaybe<RemoteFileResizeFieldSelector>;
  readonly size: InputMaybe<FieldSelectorEnum>;
  readonly spaceId: InputMaybe<FieldSelectorEnum>;
  readonly sys: InputMaybe<ContentfulAssetSysFieldSelector>;
  readonly title: InputMaybe<FieldSelectorEnum>;
  readonly updatedAt: InputMaybe<FieldSelectorEnum>;
  readonly url: InputMaybe<FieldSelectorEnum>;
  readonly width: InputMaybe<FieldSelectorEnum>;
};

type ContentfulAssetFile = {
  readonly contentType: Maybe<Scalars['String']>;
  readonly details: Maybe<ContentfulAssetFileDetails>;
  readonly fileName: Maybe<Scalars['String']>;
  readonly url: Maybe<Scalars['String']>;
};

type ContentfulAssetFileDetails = {
  readonly image: Maybe<ContentfulAssetFileDetailsImage>;
  readonly size: Maybe<Scalars['Int']>;
};

type ContentfulAssetFileDetailsFieldSelector = {
  readonly image: InputMaybe<ContentfulAssetFileDetailsImageFieldSelector>;
  readonly size: InputMaybe<FieldSelectorEnum>;
};

type ContentfulAssetFileDetailsFilterInput = {
  readonly image: InputMaybe<ContentfulAssetFileDetailsImageFilterInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetFileDetailsImage = {
  readonly height: Maybe<Scalars['Int']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ContentfulAssetFileDetailsImageFieldSelector = {
  readonly height: InputMaybe<FieldSelectorEnum>;
  readonly width: InputMaybe<FieldSelectorEnum>;
};

type ContentfulAssetFileDetailsImageFilterInput = {
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetFileDetailsImageSortInput = {
  readonly height: InputMaybe<SortOrderEnum>;
  readonly width: InputMaybe<SortOrderEnum>;
};

type ContentfulAssetFileDetailsSortInput = {
  readonly image: InputMaybe<ContentfulAssetFileDetailsImageSortInput>;
  readonly size: InputMaybe<SortOrderEnum>;
};

type ContentfulAssetFileFieldSelector = {
  readonly contentType: InputMaybe<FieldSelectorEnum>;
  readonly details: InputMaybe<ContentfulAssetFileDetailsFieldSelector>;
  readonly fileName: InputMaybe<FieldSelectorEnum>;
  readonly url: InputMaybe<FieldSelectorEnum>;
};

type ContentfulAssetFileFilterInput = {
  readonly contentType: InputMaybe<StringQueryOperatorInput>;
  readonly details: InputMaybe<ContentfulAssetFileDetailsFilterInput>;
  readonly fileName: InputMaybe<StringQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulAssetFileSortInput = {
  readonly contentType: InputMaybe<SortOrderEnum>;
  readonly details: InputMaybe<ContentfulAssetFileDetailsSortInput>;
  readonly fileName: InputMaybe<SortOrderEnum>;
  readonly url: InputMaybe<SortOrderEnum>;
};

type ContentfulAssetFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly file: InputMaybe<ContentfulAssetFileFilterInput>;
  readonly filename: InputMaybe<StringQueryOperatorInput>;
  readonly filesize: InputMaybe<IntQueryOperatorInput>;
  readonly gatsbyImage: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mimeType: InputMaybe<StringQueryOperatorInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly placeholderUrl: InputMaybe<StringQueryOperatorInput>;
  readonly publicUrl: InputMaybe<StringQueryOperatorInput>;
  readonly resize: InputMaybe<RemoteFileResizeFilterInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulAssetSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulAssetEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulAssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulAsset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulAssetGroupConnection_distinctArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetGroupConnection_groupArgs = {
  field: ContentfulAssetFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulAssetGroupConnection_maxArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetGroupConnection_minArgs = {
  field: ContentfulAssetFieldSelector;
};


type ContentfulAssetGroupConnection_sumArgs = {
  field: ContentfulAssetFieldSelector;
};

type ContentfulAssetSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly createdAt: InputMaybe<SortOrderEnum>;
  readonly description: InputMaybe<SortOrderEnum>;
  readonly file: InputMaybe<ContentfulAssetFileSortInput>;
  readonly filename: InputMaybe<SortOrderEnum>;
  readonly filesize: InputMaybe<SortOrderEnum>;
  readonly gatsbyImage: InputMaybe<SortOrderEnum>;
  readonly gatsbyImageData: InputMaybe<SortOrderEnum>;
  readonly height: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly mimeType: InputMaybe<SortOrderEnum>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly placeholderUrl: InputMaybe<SortOrderEnum>;
  readonly publicUrl: InputMaybe<SortOrderEnum>;
  readonly resize: InputMaybe<RemoteFileResizeSortInput>;
  readonly size: InputMaybe<SortOrderEnum>;
  readonly spaceId: InputMaybe<SortOrderEnum>;
  readonly sys: InputMaybe<ContentfulAssetSysSortInput>;
  readonly title: InputMaybe<SortOrderEnum>;
  readonly updatedAt: InputMaybe<SortOrderEnum>;
  readonly url: InputMaybe<SortOrderEnum>;
  readonly width: InputMaybe<SortOrderEnum>;
};

type ContentfulAssetSys = {
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulAssetSysFieldSelector = {
  readonly revision: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulAssetSysFilterInput = {
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulAssetSysSortInput = {
  readonly revision: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulContentType = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly displayField: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<ContentfulContentTypeSys>;
};

type ContentfulContentTypeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulContentTypeEdge>;
  readonly group: ReadonlyArray<ContentfulContentTypeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulContentType>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulContentTypeConnection_distinctArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeConnection_groupArgs = {
  field: ContentfulContentTypeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulContentTypeConnection_maxArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeConnection_minArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeConnection_sumArgs = {
  field: ContentfulContentTypeFieldSelector;
};

type ContentfulContentTypeEdge = {
  readonly next: Maybe<ContentfulContentType>;
  readonly node: ContentfulContentType;
  readonly previous: Maybe<ContentfulContentType>;
};

type ContentfulContentTypeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly description: InputMaybe<FieldSelectorEnum>;
  readonly displayField: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly name: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<ContentfulContentTypeSysFieldSelector>;
};

type ContentfulContentTypeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly displayField: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<ContentfulContentTypeSysFilterInput>;
};

type ContentfulContentTypeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulContentTypeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulContentTypeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulContentType>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulContentTypeGroupConnection_distinctArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeGroupConnection_groupArgs = {
  field: ContentfulContentTypeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulContentTypeGroupConnection_maxArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeGroupConnection_minArgs = {
  field: ContentfulContentTypeFieldSelector;
};


type ContentfulContentTypeGroupConnection_sumArgs = {
  field: ContentfulContentTypeFieldSelector;
};

type ContentfulContentTypeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly description: InputMaybe<SortOrderEnum>;
  readonly displayField: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly name: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<ContentfulContentTypeSysSortInput>;
};

type ContentfulContentTypeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulContentTypeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulContentTypeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulContentTypeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulEntry = {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
};

type ContentfulEntryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulEntryEdge>;
  readonly group: ReadonlyArray<ContentfulEntryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulEntry>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulEntryConnection_distinctArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryConnection_groupArgs = {
  field: ContentfulEntryFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulEntryConnection_maxArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryConnection_minArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryConnection_sumArgs = {
  field: ContentfulEntryFieldSelector;
};

type ContentfulEntryEdge = {
  readonly next: Maybe<ContentfulEntry>;
  readonly node: ContentfulEntry;
  readonly previous: Maybe<ContentfulEntry>;
};

type ContentfulEntryFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
};

type ContentfulEntryFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type ContentfulEntryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulEntryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulEntryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulEntry>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulEntryGroupConnection_distinctArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryGroupConnection_groupArgs = {
  field: ContentfulEntryFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulEntryGroupConnection_maxArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryGroupConnection_minArgs = {
  field: ContentfulEntryFieldSelector;
};


type ContentfulEntryGroupConnection_sumArgs = {
  field: ContentfulEntryFieldSelector;
};

type ContentfulEntrySortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
};

type ContentfulGasElectricityGuideCompanyPage = ContentfulEntry & ContentfulReference & Node & {
  readonly category: Maybe<Scalars['String']>;
  /** Returns the first child node of type contentfulGasElectricityGuideCompanyPageContentTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideCompanyPageContentTextNode: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  /** Returns the first child node of type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  /** Returns the first child node of type contentfulGasElectricityGuideCompanyPageNavigationJsonNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideCompanyPageNavigationJsonNode: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideCompanyPageContentTextNode */
  readonly childrenContentfulGasElectricityGuideCompanyPageContentTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode */
  readonly childrenContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideCompanyPageNavigationJsonNode */
  readonly childrenContentfulGasElectricityGuideCompanyPageNavigationJsonNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>>>;
  readonly content: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly logo: Maybe<ContentfulAsset>;
  readonly metaDescription: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  readonly navigation: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly provider: Maybe<Scalars['String']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulGasElectricityGuideCompanyPageSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulGasElectricityGuideCompanyPage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulGasElectricityGuideCompanyPage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideCompanyPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityGuideCompanyPageEdge>;
  readonly group: ReadonlyArray<ContentfulGasElectricityGuideCompanyPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityGuideCompanyPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityGuideCompanyPageConnection_distinctArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageConnection_groupArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityGuideCompanyPageConnection_maxArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageConnection_minArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageConnection_sumArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};

type ContentfulGasElectricityGuideCompanyPageEdge = {
  readonly next: Maybe<ContentfulGasElectricityGuideCompanyPage>;
  readonly node: ContentfulGasElectricityGuideCompanyPage;
  readonly previous: Maybe<ContentfulGasElectricityGuideCompanyPage>;
};

type ContentfulGasElectricityGuideCompanyPageFieldSelector = {
  readonly category: InputMaybe<FieldSelectorEnum>;
  readonly childContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector>;
  readonly childContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector>;
  readonly childContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector>;
  readonly content: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly createdAt: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly logo: InputMaybe<ContentfulAssetFieldSelector>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly provider: InputMaybe<FieldSelectorEnum>;
  readonly slug: InputMaybe<FieldSelectorEnum>;
  readonly spaceId: InputMaybe<FieldSelectorEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysFieldSelector>;
  readonly title: InputMaybe<FieldSelectorEnum>;
  readonly updatedAt: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideCompanyPageFilterInput = {
  readonly category: InputMaybe<StringQueryOperatorInput>;
  readonly childContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
  readonly childContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
  readonly childContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterListInput>;
  readonly content: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly logo: InputMaybe<ContentfulAssetFilterInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly provider: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulGasElectricityGuideCompanyPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityGuideCompanyPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulGasElectricityGuideCompanyPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityGuideCompanyPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityGuideCompanyPageGroupConnection_distinctArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageGroupConnection_groupArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityGuideCompanyPageGroupConnection_maxArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageGroupConnection_minArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};


type ContentfulGasElectricityGuideCompanyPageGroupConnection_sumArgs = {
  field: ContentfulGasElectricityGuideCompanyPageFieldSelector;
};

type ContentfulGasElectricityGuideCompanyPageSortInput = {
  readonly category: InputMaybe<SortOrderEnum>;
  readonly childContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSortInput>;
  readonly childContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSortInput>;
  readonly childContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSortInput>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSortInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSortInput>;
  readonly childrenContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSortInput>;
  readonly content: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly createdAt: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly logo: InputMaybe<ContentfulAssetSortInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSortInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSortInput>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly provider: InputMaybe<SortOrderEnum>;
  readonly slug: InputMaybe<SortOrderEnum>;
  readonly spaceId: InputMaybe<SortOrderEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysSortInput>;
  readonly title: InputMaybe<SortOrderEnum>;
  readonly updatedAt: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityGuideCompanyPageSys = {
  readonly contentType: Maybe<ContentfulGasElectricityGuideCompanyPageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentType = {
  readonly sys: Maybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeSys>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeFieldSelector = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeSysFieldSelector>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeSysFilterInput>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeSortInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeSysSortInput>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeSysFieldSelector = {
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly linkType: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityGuideCompanyPageSysContentTypeSysSortInput = {
  readonly id: InputMaybe<SortOrderEnum>;
  readonly linkType: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityGuideCompanyPageSysFieldSelector = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeFieldSelector>;
  readonly revision: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideCompanyPageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityGuideCompanyPageSysSortInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysContentTypeSortInput>;
  readonly revision: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityGuideStandardPage = ContentfulEntry & ContentfulReference & Node & {
  readonly category: Maybe<Scalars['String']>;
  /** Returns the first child node of type contentfulGasElectricityGuideStandardPageContentTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideStandardPageContentTextNode: Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>;
  /** Returns the first child node of type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  /** Returns the first child node of type contentfulGasElectricityGuideStandardPageNavigationJsonNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityGuideStandardPageNavigationJsonNode: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideStandardPageContentTextNode */
  readonly childrenContentfulGasElectricityGuideStandardPageContentTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode */
  readonly childrenContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityGuideStandardPageNavigationJsonNode */
  readonly childrenContentfulGasElectricityGuideStandardPageNavigationJsonNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>>>;
  readonly content: Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly metaDescription: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  readonly navigation: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulGasElectricityGuideStandardPageSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulGasElectricityGuideStandardPage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulGasElectricityGuideStandardPage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideStandardPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityGuideStandardPageEdge>;
  readonly group: ReadonlyArray<ContentfulGasElectricityGuideStandardPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityGuideStandardPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityGuideStandardPageConnection_distinctArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageConnection_groupArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityGuideStandardPageConnection_maxArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageConnection_minArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageConnection_sumArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};

type ContentfulGasElectricityGuideStandardPageEdge = {
  readonly next: Maybe<ContentfulGasElectricityGuideStandardPage>;
  readonly node: ContentfulGasElectricityGuideStandardPage;
  readonly previous: Maybe<ContentfulGasElectricityGuideStandardPage>;
};

type ContentfulGasElectricityGuideStandardPageFieldSelector = {
  readonly category: InputMaybe<FieldSelectorEnum>;
  readonly childContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector>;
  readonly childContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly childContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector>;
  readonly content: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly createdAt: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly slug: InputMaybe<FieldSelectorEnum>;
  readonly spaceId: InputMaybe<FieldSelectorEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysFieldSelector>;
  readonly title: InputMaybe<FieldSelectorEnum>;
  readonly updatedAt: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideStandardPageFilterInput = {
  readonly category: InputMaybe<StringQueryOperatorInput>;
  readonly childContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
  readonly childContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
  readonly childContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterListInput>;
  readonly content: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulGasElectricityGuideStandardPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityGuideStandardPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulGasElectricityGuideStandardPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityGuideStandardPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityGuideStandardPageGroupConnection_distinctArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageGroupConnection_groupArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityGuideStandardPageGroupConnection_maxArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageGroupConnection_minArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};


type ContentfulGasElectricityGuideStandardPageGroupConnection_sumArgs = {
  field: ContentfulGasElectricityGuideStandardPageFieldSelector;
};

type ContentfulGasElectricityGuideStandardPageSortInput = {
  readonly category: InputMaybe<SortOrderEnum>;
  readonly childContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSortInput>;
  readonly childContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSortInput>;
  readonly childContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSortInput>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSortInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSortInput>;
  readonly childrenContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSortInput>;
  readonly content: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly createdAt: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSortInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSortInput>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly slug: InputMaybe<SortOrderEnum>;
  readonly spaceId: InputMaybe<SortOrderEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysSortInput>;
  readonly title: InputMaybe<SortOrderEnum>;
  readonly updatedAt: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityGuideStandardPageSys = {
  readonly contentType: Maybe<ContentfulGasElectricityGuideStandardPageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideStandardPageSysContentType = {
  readonly sys: Maybe<ContentfulGasElectricityGuideStandardPageSysContentTypeSys>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeFieldSelector = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeSysFieldSelector>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeSysFilterInput>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeSortInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeSysSortInput>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeSysFieldSelector = {
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly linkType: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityGuideStandardPageSysContentTypeSysSortInput = {
  readonly id: InputMaybe<SortOrderEnum>;
  readonly linkType: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityGuideStandardPageSysFieldSelector = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeFieldSelector>;
  readonly revision: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityGuideStandardPageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityGuideStandardPageSysSortInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityGuideStandardPageSysContentTypeSortInput>;
  readonly revision: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderMainPage = ContentfulEntry & ContentfulReference & Node & {
  readonly category: Maybe<Scalars['String']>;
  /** Returns the first child node of type contentfulGasElectricityProviderMainPageMetaDescriptionTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type contentfulGasElectricityProviderMainPageMetaDescriptionTextNode */
  readonly childrenContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>>>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly logo: Maybe<ContentfulAsset>;
  readonly metaDescription: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly provider: Maybe<Scalars['String']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulGasElectricityProviderMainPageSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulGasElectricityProviderMainPage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulGasElectricityProviderMainPage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderMainPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityProviderMainPageEdge>;
  readonly group: ReadonlyArray<ContentfulGasElectricityProviderMainPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityProviderMainPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityProviderMainPageConnection_distinctArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageConnection_groupArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityProviderMainPageConnection_maxArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageConnection_minArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageConnection_sumArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};

type ContentfulGasElectricityProviderMainPageEdge = {
  readonly next: Maybe<ContentfulGasElectricityProviderMainPage>;
  readonly node: ContentfulGasElectricityProviderMainPage;
  readonly previous: Maybe<ContentfulGasElectricityProviderMainPage>;
};

type ContentfulGasElectricityProviderMainPageFieldSelector = {
  readonly category: InputMaybe<FieldSelectorEnum>;
  readonly childContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly childrenContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly createdAt: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly logo: InputMaybe<ContentfulAssetFieldSelector>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly provider: InputMaybe<FieldSelectorEnum>;
  readonly slug: InputMaybe<FieldSelectorEnum>;
  readonly spaceId: InputMaybe<FieldSelectorEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysFieldSelector>;
  readonly title: InputMaybe<FieldSelectorEnum>;
  readonly updatedAt: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderMainPageFilterInput = {
  readonly category: InputMaybe<StringQueryOperatorInput>;
  readonly childContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly logo: InputMaybe<ContentfulAssetFilterInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly provider: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulGasElectricityProviderMainPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityProviderMainPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulGasElectricityProviderMainPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityProviderMainPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityProviderMainPageGroupConnection_distinctArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageGroupConnection_groupArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityProviderMainPageGroupConnection_maxArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageGroupConnection_minArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};


type ContentfulGasElectricityProviderMainPageGroupConnection_sumArgs = {
  field: ContentfulGasElectricityProviderMainPageFieldSelector;
};

type ContentfulGasElectricityProviderMainPageSortInput = {
  readonly category: InputMaybe<SortOrderEnum>;
  readonly childContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSortInput>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly childrenContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly createdAt: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly logo: InputMaybe<ContentfulAssetSortInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSortInput>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly provider: InputMaybe<SortOrderEnum>;
  readonly slug: InputMaybe<SortOrderEnum>;
  readonly spaceId: InputMaybe<SortOrderEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysSortInput>;
  readonly title: InputMaybe<SortOrderEnum>;
  readonly updatedAt: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderMainPageSys = {
  readonly contentType: Maybe<ContentfulGasElectricityProviderMainPageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderMainPageSysContentType = {
  readonly sys: Maybe<ContentfulGasElectricityProviderMainPageSysContentTypeSys>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeFieldSelector = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeSysFieldSelector>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeSysFilterInput>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeSortInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeSysSortInput>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeSysFieldSelector = {
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly linkType: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityProviderMainPageSysContentTypeSysSortInput = {
  readonly id: InputMaybe<SortOrderEnum>;
  readonly linkType: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderMainPageSysFieldSelector = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeFieldSelector>;
  readonly revision: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderMainPageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityProviderMainPageSysSortInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderMainPageSysContentTypeSortInput>;
  readonly revision: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderStandardPage = ContentfulEntry & ContentfulReference & Node & {
  readonly category: Maybe<Scalars['String']>;
  /** Returns the first child node of type contentfulGasElectricityProviderStandardPageContentTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityProviderStandardPageContentTextNode: Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>;
  /** Returns the first child node of type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  /** Returns the first child node of type contentfulGasElectricityProviderStandardPageNavigationJsonNode or null if there are no children of given type on this node */
  readonly childContentfulGasElectricityProviderStandardPageNavigationJsonNode: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type contentfulGasElectricityProviderStandardPageContentTextNode */
  readonly childrenContentfulGasElectricityProviderStandardPageContentTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode */
  readonly childrenContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>>>;
  /** Returns all children nodes filtered by type contentfulGasElectricityProviderStandardPageNavigationJsonNode */
  readonly childrenContentfulGasElectricityProviderStandardPageNavigationJsonNode: Maybe<ReadonlyArray<Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>>>;
  readonly content: Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly logo: Maybe<ContentfulAsset>;
  readonly metaDescription: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  readonly navigation: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly provider: Maybe<Scalars['String']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulGasElectricityProviderStandardPageSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulGasElectricityProviderStandardPage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulGasElectricityProviderStandardPage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderStandardPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityProviderStandardPageEdge>;
  readonly group: ReadonlyArray<ContentfulGasElectricityProviderStandardPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityProviderStandardPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityProviderStandardPageConnection_distinctArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageConnection_groupArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityProviderStandardPageConnection_maxArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageConnection_minArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageConnection_sumArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};

type ContentfulGasElectricityProviderStandardPageEdge = {
  readonly next: Maybe<ContentfulGasElectricityProviderStandardPage>;
  readonly node: ContentfulGasElectricityProviderStandardPage;
  readonly previous: Maybe<ContentfulGasElectricityProviderStandardPage>;
};

type ContentfulGasElectricityProviderStandardPageFieldSelector = {
  readonly category: InputMaybe<FieldSelectorEnum>;
  readonly childContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector>;
  readonly childContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly childContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly childrenContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly childrenContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector>;
  readonly content: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector>;
  readonly contentful_id: InputMaybe<FieldSelectorEnum>;
  readonly createdAt: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly logo: InputMaybe<ContentfulAssetFieldSelector>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector>;
  readonly navigation: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector>;
  readonly node_locale: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly provider: InputMaybe<FieldSelectorEnum>;
  readonly slug: InputMaybe<FieldSelectorEnum>;
  readonly spaceId: InputMaybe<FieldSelectorEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysFieldSelector>;
  readonly title: InputMaybe<FieldSelectorEnum>;
  readonly updatedAt: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderStandardPageFilterInput = {
  readonly category: InputMaybe<StringQueryOperatorInput>;
  readonly childContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
  readonly childContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
  readonly childContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterListInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterListInput>;
  readonly content: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly logo: InputMaybe<ContentfulAssetFilterInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly provider: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulGasElectricityProviderStandardPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulGasElectricityProviderStandardPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulGasElectricityProviderStandardPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulGasElectricityProviderStandardPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulGasElectricityProviderStandardPageGroupConnection_distinctArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageGroupConnection_groupArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulGasElectricityProviderStandardPageGroupConnection_maxArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageGroupConnection_minArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};


type ContentfulGasElectricityProviderStandardPageGroupConnection_sumArgs = {
  field: ContentfulGasElectricityProviderStandardPageFieldSelector;
};

type ContentfulGasElectricityProviderStandardPageSortInput = {
  readonly category: InputMaybe<SortOrderEnum>;
  readonly childContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSortInput>;
  readonly childContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSortInput>;
  readonly childContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSortInput>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSortInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSortInput>;
  readonly childrenContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSortInput>;
  readonly content: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSortInput>;
  readonly contentful_id: InputMaybe<SortOrderEnum>;
  readonly createdAt: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly logo: InputMaybe<ContentfulAssetSortInput>;
  readonly metaDescription: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSortInput>;
  readonly navigation: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSortInput>;
  readonly node_locale: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly provider: InputMaybe<SortOrderEnum>;
  readonly slug: InputMaybe<SortOrderEnum>;
  readonly spaceId: InputMaybe<SortOrderEnum>;
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysSortInput>;
  readonly title: InputMaybe<SortOrderEnum>;
  readonly updatedAt: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderStandardPageSys = {
  readonly contentType: Maybe<ContentfulGasElectricityProviderStandardPageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderStandardPageSysContentType = {
  readonly sys: Maybe<ContentfulGasElectricityProviderStandardPageSysContentTypeSys>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeFieldSelector = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeSysFieldSelector>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeSysFilterInput>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeSortInput = {
  readonly sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeSysSortInput>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeSysFieldSelector = {
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly linkType: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityProviderStandardPageSysContentTypeSysSortInput = {
  readonly id: InputMaybe<SortOrderEnum>;
  readonly linkType: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulGasElectricityProviderStandardPageSysFieldSelector = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeFieldSelector>;
  readonly revision: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type ContentfulGasElectricityProviderStandardPageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulGasElectricityProviderStandardPageSysSortInput = {
  readonly contentType: InputMaybe<ContentfulGasElectricityProviderStandardPageSysContentTypeSortInput>;
  readonly revision: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type ContentfulImageCropFocus =
  | 'bottom'
  | 'bottom_right'
  | 'bottom_left'
  | 'center'
  | 'face'
  | 'faces'
  | 'left'
  | 'right'
  | 'top'
  | 'top_left'
  | 'top_right';

type ContentfulReference = {
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldSelector;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldSelector = {
  readonly absolutePath: InputMaybe<FieldSelectorEnum>;
  readonly accessTime: InputMaybe<FieldSelectorEnum>;
  readonly atime: InputMaybe<FieldSelectorEnum>;
  readonly atimeMs: InputMaybe<FieldSelectorEnum>;
  readonly base: InputMaybe<FieldSelectorEnum>;
  readonly birthTime: InputMaybe<FieldSelectorEnum>;
  readonly birthtime: InputMaybe<FieldSelectorEnum>;
  readonly birthtimeMs: InputMaybe<FieldSelectorEnum>;
  readonly changeTime: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly ctime: InputMaybe<FieldSelectorEnum>;
  readonly ctimeMs: InputMaybe<FieldSelectorEnum>;
  readonly dev: InputMaybe<FieldSelectorEnum>;
  readonly dir: InputMaybe<FieldSelectorEnum>;
  readonly ext: InputMaybe<FieldSelectorEnum>;
  readonly extension: InputMaybe<FieldSelectorEnum>;
  readonly gid: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly ino: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly mode: InputMaybe<FieldSelectorEnum>;
  readonly modifiedTime: InputMaybe<FieldSelectorEnum>;
  readonly mtime: InputMaybe<FieldSelectorEnum>;
  readonly mtimeMs: InputMaybe<FieldSelectorEnum>;
  readonly name: InputMaybe<FieldSelectorEnum>;
  readonly nlink: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly prettySize: InputMaybe<FieldSelectorEnum>;
  readonly rdev: InputMaybe<FieldSelectorEnum>;
  readonly relativeDirectory: InputMaybe<FieldSelectorEnum>;
  readonly relativePath: InputMaybe<FieldSelectorEnum>;
  readonly root: InputMaybe<FieldSelectorEnum>;
  readonly size: InputMaybe<FieldSelectorEnum>;
  readonly sourceInstanceName: InputMaybe<FieldSelectorEnum>;
  readonly uid: InputMaybe<FieldSelectorEnum>;
};

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldSelector;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldSelector;
};

type DirectorySortInput = {
  readonly absolutePath: InputMaybe<SortOrderEnum>;
  readonly accessTime: InputMaybe<SortOrderEnum>;
  readonly atime: InputMaybe<SortOrderEnum>;
  readonly atimeMs: InputMaybe<SortOrderEnum>;
  readonly base: InputMaybe<SortOrderEnum>;
  readonly birthTime: InputMaybe<SortOrderEnum>;
  readonly birthtime: InputMaybe<SortOrderEnum>;
  readonly birthtimeMs: InputMaybe<SortOrderEnum>;
  readonly changeTime: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly ctime: InputMaybe<SortOrderEnum>;
  readonly ctimeMs: InputMaybe<SortOrderEnum>;
  readonly dev: InputMaybe<SortOrderEnum>;
  readonly dir: InputMaybe<SortOrderEnum>;
  readonly ext: InputMaybe<SortOrderEnum>;
  readonly extension: InputMaybe<SortOrderEnum>;
  readonly gid: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly ino: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly mode: InputMaybe<SortOrderEnum>;
  readonly modifiedTime: InputMaybe<SortOrderEnum>;
  readonly mtime: InputMaybe<SortOrderEnum>;
  readonly mtimeMs: InputMaybe<SortOrderEnum>;
  readonly name: InputMaybe<SortOrderEnum>;
  readonly nlink: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly prettySize: InputMaybe<SortOrderEnum>;
  readonly rdev: InputMaybe<SortOrderEnum>;
  readonly relativeDirectory: InputMaybe<SortOrderEnum>;
  readonly relativePath: InputMaybe<SortOrderEnum>;
  readonly root: InputMaybe<SortOrderEnum>;
  readonly size: InputMaybe<SortOrderEnum>;
  readonly sourceInstanceName: InputMaybe<SortOrderEnum>;
  readonly uid: InputMaybe<SortOrderEnum>;
};

type FieldSelectorEnum =
  | 'SELECT';

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldSelector;
};


type FileConnection_groupArgs = {
  field: FileFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldSelector;
};


type FileConnection_minArgs = {
  field: FileFieldSelector;
};


type FileConnection_sumArgs = {
  field: FileFieldSelector;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldSelector = {
  readonly absolutePath: InputMaybe<FieldSelectorEnum>;
  readonly accessTime: InputMaybe<FieldSelectorEnum>;
  readonly atime: InputMaybe<FieldSelectorEnum>;
  readonly atimeMs: InputMaybe<FieldSelectorEnum>;
  readonly base: InputMaybe<FieldSelectorEnum>;
  readonly birthTime: InputMaybe<FieldSelectorEnum>;
  readonly birthtime: InputMaybe<FieldSelectorEnum>;
  readonly birthtimeMs: InputMaybe<FieldSelectorEnum>;
  readonly changeTime: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly ctime: InputMaybe<FieldSelectorEnum>;
  readonly ctimeMs: InputMaybe<FieldSelectorEnum>;
  readonly dev: InputMaybe<FieldSelectorEnum>;
  readonly dir: InputMaybe<FieldSelectorEnum>;
  readonly ext: InputMaybe<FieldSelectorEnum>;
  readonly extension: InputMaybe<FieldSelectorEnum>;
  readonly gid: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly ino: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly mode: InputMaybe<FieldSelectorEnum>;
  readonly modifiedTime: InputMaybe<FieldSelectorEnum>;
  readonly mtime: InputMaybe<FieldSelectorEnum>;
  readonly mtimeMs: InputMaybe<FieldSelectorEnum>;
  readonly name: InputMaybe<FieldSelectorEnum>;
  readonly nlink: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly prettySize: InputMaybe<FieldSelectorEnum>;
  readonly rdev: InputMaybe<FieldSelectorEnum>;
  readonly relativeDirectory: InputMaybe<FieldSelectorEnum>;
  readonly relativePath: InputMaybe<FieldSelectorEnum>;
  readonly root: InputMaybe<FieldSelectorEnum>;
  readonly size: InputMaybe<FieldSelectorEnum>;
  readonly sourceInstanceName: InputMaybe<FieldSelectorEnum>;
  readonly uid: InputMaybe<FieldSelectorEnum>;
};

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldSelector;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldSelector;
};


type FileGroupConnection_minArgs = {
  field: FileFieldSelector;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldSelector;
};

type FileSortInput = {
  readonly absolutePath: InputMaybe<SortOrderEnum>;
  readonly accessTime: InputMaybe<SortOrderEnum>;
  readonly atime: InputMaybe<SortOrderEnum>;
  readonly atimeMs: InputMaybe<SortOrderEnum>;
  readonly base: InputMaybe<SortOrderEnum>;
  readonly birthTime: InputMaybe<SortOrderEnum>;
  readonly birthtime: InputMaybe<SortOrderEnum>;
  readonly birthtimeMs: InputMaybe<SortOrderEnum>;
  readonly changeTime: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly ctime: InputMaybe<SortOrderEnum>;
  readonly ctimeMs: InputMaybe<SortOrderEnum>;
  readonly dev: InputMaybe<SortOrderEnum>;
  readonly dir: InputMaybe<SortOrderEnum>;
  readonly ext: InputMaybe<SortOrderEnum>;
  readonly extension: InputMaybe<SortOrderEnum>;
  readonly gid: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly ino: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly mode: InputMaybe<SortOrderEnum>;
  readonly modifiedTime: InputMaybe<SortOrderEnum>;
  readonly mtime: InputMaybe<SortOrderEnum>;
  readonly mtimeMs: InputMaybe<SortOrderEnum>;
  readonly name: InputMaybe<SortOrderEnum>;
  readonly nlink: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly prettySize: InputMaybe<SortOrderEnum>;
  readonly rdev: InputMaybe<SortOrderEnum>;
  readonly relativeDirectory: InputMaybe<SortOrderEnum>;
  readonly relativePath: InputMaybe<SortOrderEnum>;
  readonly root: InputMaybe<SortOrderEnum>;
  readonly size: InputMaybe<SortOrderEnum>;
  readonly sourceInstanceName: InputMaybe<SortOrderEnum>;
  readonly uid: InputMaybe<SortOrderEnum>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageResizingBehavior =
  /** Crop a part of the original image to match the specified size. */
  | 'crop'
  /** Crop the image to the specified dimensions, if the original image is smaller than these dimensions, then the image will be upscaled. */
  | 'fill'
  | ''
  /** Same as the default resizing, but adds padding so that the generated image has the specified dimensions. */
  | 'pad'
  /** Scale the image regardless of the original aspect ratio. */
  | 'scale'
  /** When used in association with the f parameter below, creates a thumbnail from the image based on a focus area. */
  | 'thumb';

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly contentFilePath: Maybe<Scalars['String']>;
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFieldSelector = {
  readonly content: InputMaybe<FieldSelectorEnum>;
  readonly contentDigest: InputMaybe<FieldSelectorEnum>;
  readonly contentFilePath: InputMaybe<FieldSelectorEnum>;
  readonly description: InputMaybe<FieldSelectorEnum>;
  readonly fieldOwners: InputMaybe<FieldSelectorEnum>;
  readonly ignoreType: InputMaybe<FieldSelectorEnum>;
  readonly mediaType: InputMaybe<FieldSelectorEnum>;
  readonly owner: InputMaybe<FieldSelectorEnum>;
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly contentFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type InternalSortInput = {
  readonly content: InputMaybe<SortOrderEnum>;
  readonly contentDigest: InputMaybe<SortOrderEnum>;
  readonly contentFilePath: InputMaybe<SortOrderEnum>;
  readonly description: InputMaybe<SortOrderEnum>;
  readonly fieldOwners: InputMaybe<SortOrderEnum>;
  readonly ignoreType: InputMaybe<SortOrderEnum>;
  readonly mediaType: InputMaybe<SortOrderEnum>;
  readonly owner: InputMaybe<SortOrderEnum>;
  readonly type: InputMaybe<SortOrderEnum>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type NodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Query = {
  readonly allContentfulAsset: ContentfulAssetConnection;
  readonly allContentfulContentType: ContentfulContentTypeConnection;
  readonly allContentfulEntry: ContentfulEntryConnection;
  readonly allContentfulGasElectricityGuideCompanyPage: ContentfulGasElectricityGuideCompanyPageConnection;
  readonly allContentfulGasElectricityGuideCompanyPageContentTextNode: contentfulGasElectricityGuideCompanyPageContentTextNodeConnection;
  readonly allContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection;
  readonly allContentfulGasElectricityGuideCompanyPageNavigationJsonNode: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection;
  readonly allContentfulGasElectricityGuideStandardPage: ContentfulGasElectricityGuideStandardPageConnection;
  readonly allContentfulGasElectricityGuideStandardPageContentTextNode: contentfulGasElectricityGuideStandardPageContentTextNodeConnection;
  readonly allContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection;
  readonly allContentfulGasElectricityGuideStandardPageNavigationJsonNode: contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection;
  readonly allContentfulGasElectricityProviderMainPage: ContentfulGasElectricityProviderMainPageConnection;
  readonly allContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection;
  readonly allContentfulGasElectricityProviderStandardPage: ContentfulGasElectricityProviderStandardPageConnection;
  readonly allContentfulGasElectricityProviderStandardPageContentTextNode: contentfulGasElectricityProviderStandardPageContentTextNodeConnection;
  readonly allContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection;
  readonly allContentfulGasElectricityProviderStandardPageNavigationJsonNode: contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection;
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly contentfulAsset: Maybe<ContentfulAsset>;
  readonly contentfulContentType: Maybe<ContentfulContentType>;
  readonly contentfulEntry: Maybe<ContentfulEntry>;
  readonly contentfulGasElectricityGuideCompanyPage: Maybe<ContentfulGasElectricityGuideCompanyPage>;
  readonly contentfulGasElectricityGuideCompanyPageContentTextNode: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  readonly contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  readonly contentfulGasElectricityGuideCompanyPageNavigationJsonNode: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly contentfulGasElectricityGuideStandardPage: Maybe<ContentfulGasElectricityGuideStandardPage>;
  readonly contentfulGasElectricityGuideStandardPageContentTextNode: Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>;
  readonly contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  readonly contentfulGasElectricityGuideStandardPageNavigationJsonNode: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly contentfulGasElectricityProviderMainPage: Maybe<ContentfulGasElectricityProviderMainPage>;
  readonly contentfulGasElectricityProviderMainPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly contentfulGasElectricityProviderStandardPage: Maybe<ContentfulGasElectricityProviderStandardPage>;
  readonly contentfulGasElectricityProviderStandardPageContentTextNode: Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>;
  readonly contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  readonly contentfulGasElectricityProviderStandardPageNavigationJsonNode: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
};


type Query_allContentfulAssetArgs = {
  filter: InputMaybe<ContentfulAssetFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulAssetSortInput>>>;
};


type Query_allContentfulContentTypeArgs = {
  filter: InputMaybe<ContentfulContentTypeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulContentTypeSortInput>>>;
};


type Query_allContentfulEntryArgs = {
  filter: InputMaybe<ContentfulEntryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulEntrySortInput>>>;
};


type Query_allContentfulGasElectricityGuideCompanyPageArgs = {
  filter: InputMaybe<ContentfulGasElectricityGuideCompanyPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulGasElectricityGuideCompanyPageSortInput>>>;
};


type Query_allContentfulGasElectricityGuideCompanyPageContentTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityGuideCompanyPageNavigationJsonNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSortInput>>>;
};


type Query_allContentfulGasElectricityGuideStandardPageArgs = {
  filter: InputMaybe<ContentfulGasElectricityGuideStandardPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulGasElectricityGuideStandardPageSortInput>>>;
};


type Query_allContentfulGasElectricityGuideStandardPageContentTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityGuideStandardPageNavigationJsonNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSortInput>>>;
};


type Query_allContentfulGasElectricityProviderMainPageArgs = {
  filter: InputMaybe<ContentfulGasElectricityProviderMainPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulGasElectricityProviderMainPageSortInput>>>;
};


type Query_allContentfulGasElectricityProviderMainPageMetaDescriptionTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityProviderStandardPageArgs = {
  filter: InputMaybe<ContentfulGasElectricityProviderStandardPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<ContentfulGasElectricityProviderStandardPageSortInput>>>;
};


type Query_allContentfulGasElectricityProviderStandardPageContentTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSortInput>>>;
};


type Query_allContentfulGasElectricityProviderStandardPageNavigationJsonNodeArgs = {
  filter: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSortInput>>>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<DirectorySortInput>>>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<FileSortInput>>>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<SiteSortInput>>>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataSortInput>>>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionSortInput>>>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<SitePageSortInput>>>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ReadonlyArray<InputMaybe<SitePluginSortInput>>>;
};


type Query_contentfulAssetArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  file: InputMaybe<ContentfulAssetFileFilterInput>;
  filename: InputMaybe<StringQueryOperatorInput>;
  filesize: InputMaybe<IntQueryOperatorInput>;
  gatsbyImage: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  height: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mimeType: InputMaybe<StringQueryOperatorInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  placeholderUrl: InputMaybe<StringQueryOperatorInput>;
  publicUrl: InputMaybe<StringQueryOperatorInput>;
  resize: InputMaybe<RemoteFileResizeFilterInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulAssetSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
  width: InputMaybe<IntQueryOperatorInput>;
};


type Query_contentfulContentTypeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  displayField: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<ContentfulContentTypeSysFilterInput>;
};


type Query_contentfulEntryArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_contentfulGasElectricityGuideCompanyPageArgs = {
  category: InputMaybe<StringQueryOperatorInput>;
  childContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
  childContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
  childContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenContentfulGasElectricityGuideCompanyPageContentTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterListInput>;
  childrenContentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterListInput>;
  childrenContentfulGasElectricityGuideCompanyPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterListInput>;
  content: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  logo: InputMaybe<ContentfulAssetFilterInput>;
  metaDescription: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
  navigation: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  provider: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulGasElectricityGuideCompanyPageSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulGasElectricityGuideCompanyPageContentTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  content: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  metaDescription: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityGuideCompanyPageNavigationJsonNodeArgs = {
  Contact: InputMaybe<StringQueryOperatorInput>;
  Get_connected_to_the_network: InputMaybe<StringQueryOperatorInput>;
  Power_cuts: InputMaybe<StringQueryOperatorInput>;
  Priority_Services_Register: InputMaybe<StringQueryOperatorInput>;
  What_can_they_help_you_with_: InputMaybe<StringQueryOperatorInput>;
  What_they_do_: InputMaybe<StringQueryOperatorInput>;
  Where_do_they_power_: InputMaybe<StringQueryOperatorInput>;
  Whis_are_they_: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysFilterInput>;
};


type Query_contentfulGasElectricityGuideStandardPageArgs = {
  category: InputMaybe<StringQueryOperatorInput>;
  childContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
  childContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
  childContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenContentfulGasElectricityGuideStandardPageContentTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterListInput>;
  childrenContentfulGasElectricityGuideStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterListInput>;
  childrenContentfulGasElectricityGuideStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterListInput>;
  content: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  metaDescription: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
  navigation: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulGasElectricityGuideStandardPageSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulGasElectricityGuideStandardPageContentTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  content: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  metaDescription: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityGuideStandardPageNavigationJsonNodeArgs = {
  Advantages: InputMaybe<StringQueryOperatorInput>;
  Advantages_of_online: InputMaybe<StringQueryOperatorInput>;
  Advantages_of_paper: InputMaybe<StringQueryOperatorInput>;
  Are_smart_meters_dangerous_: InputMaybe<StringQueryOperatorInput>;
  Around_the_world: InputMaybe<StringQueryOperatorInput>;
  Average_energy_usage: InputMaybe<StringQueryOperatorInput>;
  Awards: InputMaybe<StringQueryOperatorInput>;
  Biomass_boilers: InputMaybe<StringQueryOperatorInput>;
  Booking_and_installation: InputMaybe<StringQueryOperatorInput>;
  Business_energy_meter_types: InputMaybe<StringQueryOperatorInput>;
  Calculating_kWh_usage: InputMaybe<StringQueryOperatorInput>;
  Calculating_usage: InputMaybe<StringQueryOperatorInput>;
  Can_someone_unplug_you_: InputMaybe<StringQueryOperatorInput>;
  Can_students_switch_: InputMaybe<StringQueryOperatorInput>;
  Can_you_change_your_meter_: InputMaybe<StringQueryOperatorInput>;
  Can_you_switch_to_a_standard_tariff_: InputMaybe<StringQueryOperatorInput>;
  Can_you_switch_when_renting: InputMaybe<StringQueryOperatorInput>;
  Change_account_holder: InputMaybe<StringQueryOperatorInput>;
  Change_account_holder_s_name: InputMaybe<StringQueryOperatorInput>;
  Changing_account_holder_when_moving_house: InputMaybe<StringQueryOperatorInput>;
  Changing_your_meter: InputMaybe<StringQueryOperatorInput>;
  Charging: InputMaybe<StringQueryOperatorInput>;
  Claiming_VAT: InputMaybe<StringQueryOperatorInput>;
  Claiming_compensation: InputMaybe<StringQueryOperatorInput>;
  Complaints___resultion: InputMaybe<StringQueryOperatorInput>;
  Complaints_about_your_supplier: InputMaybe<StringQueryOperatorInput>;
  Credit_on_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  DNOs___home_energy_systems: InputMaybe<StringQueryOperatorInput>;
  Difference_between_serial_numbers: InputMaybe<StringQueryOperatorInput>;
  Different_tariff_types: InputMaybe<StringQueryOperatorInput>;
  Disadvantages: InputMaybe<StringQueryOperatorInput>;
  Do_I_have_Economy_7_: InputMaybe<StringQueryOperatorInput>;
  Do_all_providers_offer_dual_fuel: InputMaybe<StringQueryOperatorInput>;
  Do_you_need_a_smart_meter_: InputMaybe<StringQueryOperatorInput>;
  Domestication: InputMaybe<StringQueryOperatorInput>;
  Dual_fuel_vs_single_fuel_tariffs: InputMaybe<StringQueryOperatorInput>;
  Economy_7_prepayment: InputMaybe<StringQueryOperatorInput>;
  Economy_10_meters: InputMaybe<StringQueryOperatorInput>;
  Eligibility_criteria: InputMaybe<StringQueryOperatorInput>;
  Environmental_impact: InputMaybe<StringQueryOperatorInput>;
  Exempt___reduced_rate_products: InputMaybe<StringQueryOperatorInput>;
  For_business: InputMaybe<StringQueryOperatorInput>;
  Ground_source_heat_pumps: InputMaybe<StringQueryOperatorInput>;
  Having_more_than_one_account_holder: InputMaybe<StringQueryOperatorInput>;
  Heating: InputMaybe<StringQueryOperatorInput>;
  Help_available_for_users: InputMaybe<StringQueryOperatorInput>;
  Home_wind_turbines: InputMaybe<StringQueryOperatorInput>;
  How_Economy_7_works: InputMaybe<StringQueryOperatorInput>;
  How_biomass_works: InputMaybe<StringQueryOperatorInput>;
  How_can_I_save_: InputMaybe<StringQueryOperatorInput>;
  How_do_I_find_my_MPAN_: InputMaybe<StringQueryOperatorInput>;
  How_do_I_find_my_MPRN_: InputMaybe<StringQueryOperatorInput>;
  How_do_I_find_my_MSN_: InputMaybe<StringQueryOperatorInput>;
  How_do_smart_meters_work_: InputMaybe<StringQueryOperatorInput>;
  How_do_they_work_: InputMaybe<StringQueryOperatorInput>;
  How_do_we_become_net_zero_: InputMaybe<StringQueryOperatorInput>;
  How_do_you_know_when_to_top_up_: InputMaybe<StringQueryOperatorInput>;
  How_far_does_one_charge_take_you_: InputMaybe<StringQueryOperatorInput>;
  How_geothermal_works: InputMaybe<StringQueryOperatorInput>;
  How_hydropower_works: InputMaybe<StringQueryOperatorInput>;
  How_long_does_it_take_: InputMaybe<StringQueryOperatorInput>;
  How_much_can_you_claim_: InputMaybe<StringQueryOperatorInput>;
  How_much_can_you_save_: InputMaybe<StringQueryOperatorInput>;
  How_much_could_you_save_: InputMaybe<StringQueryOperatorInput>;
  How_much_does_it_cost_: InputMaybe<StringQueryOperatorInput>;
  How_much_does_one_kWh_cost_: InputMaybe<StringQueryOperatorInput>;
  How_much_energy_should_you_use_: InputMaybe<StringQueryOperatorInput>;
  How_much_is_one_kWh_: InputMaybe<StringQueryOperatorInput>;
  How_much_renewable_are_we_using_: InputMaybe<StringQueryOperatorInput>;
  How_solar_power_works: InputMaybe<StringQueryOperatorInput>;
  How_the_UK_is_working_towards_green_future: InputMaybe<StringQueryOperatorInput>;
  How_to_add_or_remove: InputMaybe<StringQueryOperatorInput>;
  How_to_apply: InputMaybe<StringQueryOperatorInput>;
  How_to_be_prepared: InputMaybe<StringQueryOperatorInput>;
  How_to_calculate_your_usage_: InputMaybe<StringQueryOperatorInput>;
  How_to_claim: InputMaybe<StringQueryOperatorInput>;
  How_to_compare: InputMaybe<StringQueryOperatorInput>;
  How_to_cut_back_on_usage: InputMaybe<StringQueryOperatorInput>;
  How_to_decrease_bills_: InputMaybe<StringQueryOperatorInput>;
  How_to_find_your_new_supplier: InputMaybe<StringQueryOperatorInput>;
  How_to_get_a_new_key_or_card: InputMaybe<StringQueryOperatorInput>;
  How_to_install_a_charger_at_home: InputMaybe<StringQueryOperatorInput>;
  How_to_know_if_you_have_a_dual_tariff: InputMaybe<StringQueryOperatorInput>;
  How_to_read_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  How_to_read_an_Economy_7_meter_: InputMaybe<StringQueryOperatorInput>;
  How_to_report_a_gas_leak: InputMaybe<StringQueryOperatorInput>;
  How_to_report_a_power_cut: InputMaybe<StringQueryOperatorInput>;
  How_to_report_a_power_cut_: InputMaybe<StringQueryOperatorInput>;
  How_to_save_energy: InputMaybe<StringQueryOperatorInput>;
  How_to_save_if_you_can_t_change_: InputMaybe<StringQueryOperatorInput>;
  How_to_save_money: InputMaybe<StringQueryOperatorInput>;
  How_to_switch: InputMaybe<StringQueryOperatorInput>;
  How_wind_energy_works: InputMaybe<StringQueryOperatorInput>;
  I_can_t_pay_my_energy_bills: InputMaybe<StringQueryOperatorInput>;
  I_have_more_than_one_MPAN: InputMaybe<StringQueryOperatorInput>;
  I_haven_t_been_sent_a_bill: InputMaybe<StringQueryOperatorInput>;
  If_the_account_holder_passes_away: InputMaybe<StringQueryOperatorInput>;
  If_you_can_t_afford_to_top_up: InputMaybe<StringQueryOperatorInput>;
  In_home_display: InputMaybe<StringQueryOperatorInput>;
  In_the_UK: InputMaybe<StringQueryOperatorInput>;
  Indendent_DNOs: InputMaybe<StringQueryOperatorInput>;
  Installation: InputMaybe<StringQueryOperatorInput>;
  Is_Economy_7_for_gas___electricity_: InputMaybe<StringQueryOperatorInput>;
  Is_is_good_for_the_environment: InputMaybe<StringQueryOperatorInput>;
  Is_there_a_DNO_for_gas_: InputMaybe<StringQueryOperatorInput>;
  MSN_doesn_t_match_my_bill: InputMaybe<StringQueryOperatorInput>;
  Making_the_most_of_Economy_7: InputMaybe<StringQueryOperatorInput>;
  Moving_your_meter: InputMaybe<StringQueryOperatorInput>;
  My_smart_meter_is_beeping: InputMaybe<StringQueryOperatorInput>;
  Power_plants: InputMaybe<StringQueryOperatorInput>;
  Priority_Services_Register: InputMaybe<StringQueryOperatorInput>;
  Pros___cons: InputMaybe<StringQueryOperatorInput>;
  Reading_your_electricity_meter: InputMaybe<StringQueryOperatorInput>;
  Reading_your_gas_meter: InputMaybe<StringQueryOperatorInput>;
  Reading_your_meter: InputMaybe<StringQueryOperatorInput>;
  Reading_your_smart_meter: InputMaybe<StringQueryOperatorInput>;
  Residential_vs_business_meters: InputMaybe<StringQueryOperatorInput>;
  Reviews: InputMaybe<StringQueryOperatorInput>;
  Saving_money: InputMaybe<StringQueryOperatorInput>;
  Should_you_switch_tariff_or_provider_: InputMaybe<StringQueryOperatorInput>;
  Smart_Economy_7_meters: InputMaybe<StringQueryOperatorInput>;
  Smart_meter_rollout: InputMaybe<StringQueryOperatorInput>;
  Smart_meters: InputMaybe<StringQueryOperatorInput>;
  Solar_energy_for_business: InputMaybe<StringQueryOperatorInput>;
  Solar_panel_care: InputMaybe<StringQueryOperatorInput>;
  Submitting_your_meter_readings: InputMaybe<StringQueryOperatorInput>;
  Switch_tariffs_or_providers: InputMaybe<StringQueryOperatorInput>;
  Switch_to_100__renewables: InputMaybe<StringQueryOperatorInput>;
  Switch_to_online_bills: InputMaybe<StringQueryOperatorInput>;
  Switch_to_paper: InputMaybe<StringQueryOperatorInput>;
  Switching_before_you_have_a_new_supplier: InputMaybe<StringQueryOperatorInput>;
  Tariffs___pricing: InputMaybe<StringQueryOperatorInput>;
  Terms_on_your_energy_bill: InputMaybe<StringQueryOperatorInput>;
  The_importance_of_the_water_cycle: InputMaybe<StringQueryOperatorInput>;
  Things_to_know_before: InputMaybe<StringQueryOperatorInput>;
  Top_tips_for_switching_as_a_tenant: InputMaybe<StringQueryOperatorInput>;
  Top_up_errors: InputMaybe<StringQueryOperatorInput>;
  Topping_up: InputMaybe<StringQueryOperatorInput>;
  Types_of_meter: InputMaybe<StringQueryOperatorInput>;
  Types_of_renewables: InputMaybe<StringQueryOperatorInput>;
  Types_of_solar_panel: InputMaybe<StringQueryOperatorInput>;
  UK_average_energy_usage: InputMaybe<StringQueryOperatorInput>;
  Upgrading_to_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  VAT_reduced_rates: InputMaybe<StringQueryOperatorInput>;
  WIll_it_affect_my_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  WIll_it_affect_my_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  What_VAT_relief_is_available_: InputMaybe<StringQueryOperatorInput>;
  What_affects_a_business__usage_: InputMaybe<StringQueryOperatorInput>;
  What_affects_your_usage_: InputMaybe<StringQueryOperatorInput>;
  What_are_the_times_: InputMaybe<StringQueryOperatorInput>;
  What_are_we_doing_to_become_net_zero_: InputMaybe<StringQueryOperatorInput>;
  What_cuases_a_power_cut_: InputMaybe<StringQueryOperatorInput>;
  What_does_a_bill_cover_: InputMaybe<StringQueryOperatorInput>;
  What_does_it_mean_for_you_: InputMaybe<StringQueryOperatorInput>;
  What_happens_: InputMaybe<StringQueryOperatorInput>;
  What_happens_if_I_switch_providers_: InputMaybe<StringQueryOperatorInput>;
  What_happens_if_you_don_t_submit: InputMaybe<StringQueryOperatorInput>;
  What_happens_if_you_switch_: InputMaybe<StringQueryOperatorInput>;
  What_happens_to_money_owed: InputMaybe<StringQueryOperatorInput>;
  What_happens_to_unused_energy_: InputMaybe<StringQueryOperatorInput>;
  What_happens_to_your_tariff: InputMaybe<StringQueryOperatorInput>;
  What_is_Economy_7_: InputMaybe<StringQueryOperatorInput>;
  What_is_a_DNO_: InputMaybe<StringQueryOperatorInput>;
  What_is_a_kilowatt_hour_: InputMaybe<StringQueryOperatorInput>;
  What_is_an_MPAN_: InputMaybe<StringQueryOperatorInput>;
  What_is_an_MPRN_: InputMaybe<StringQueryOperatorInput>;
  What_is_an_MSN_: InputMaybe<StringQueryOperatorInput>;
  What_is_dual_fuel: InputMaybe<StringQueryOperatorInput>;
  What_is_net_zero_: InputMaybe<StringQueryOperatorInput>;
  What_is_prepayment_: InputMaybe<StringQueryOperatorInput>;
  What_is_the_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  What_is_the_difference_: InputMaybe<StringQueryOperatorInput>;
  What_it_the_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  What_it_the_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  What_makes_energy_renewable_: InputMaybe<StringQueryOperatorInput>;
  What_s_the_difference_: InputMaybe<StringQueryOperatorInput>;
  What_to_do_: InputMaybe<StringQueryOperatorInput>;
  What_to_do_before_switching: InputMaybe<StringQueryOperatorInput>;
  What_to_do_if_you_run_out_of_charge_: InputMaybe<StringQueryOperatorInput>;
  What_to_look_for_: InputMaybe<StringQueryOperatorInput>;
  What_to_look_out_for: InputMaybe<StringQueryOperatorInput>;
  What_you_can_find_on_a_bill: InputMaybe<StringQueryOperatorInput>;
  What_you_need_to_do: InputMaybe<StringQueryOperatorInput>;
  When_is_it_paid_: InputMaybe<StringQueryOperatorInput>;
  When_to_submit_your_readings: InputMaybe<StringQueryOperatorInput>;
  Where_is_the_best_location_for_geothermal_: InputMaybe<StringQueryOperatorInput>;
  Where_to_charge_your_EV: InputMaybe<StringQueryOperatorInput>;
  Where_to_find_your_bills_online: InputMaybe<StringQueryOperatorInput>;
  Which_is_better_for_you_: InputMaybe<StringQueryOperatorInput>;
  Which_is_the_best_: InputMaybe<StringQueryOperatorInput>;
  Which_meter_is_best_: InputMaybe<StringQueryOperatorInput>;
  Which_providers_offer_it_: InputMaybe<StringQueryOperatorInput>;
  Which_providers_offer_smart_meters_: InputMaybe<StringQueryOperatorInput>;
  Which_suppliers_have_gone_bust_already_: InputMaybe<StringQueryOperatorInput>;
  Which_tariffs_are_available_: InputMaybe<StringQueryOperatorInput>;
  Who_can_get_dual_tariffs: InputMaybe<StringQueryOperatorInput>;
  Who_is_your_DNO_: InputMaybe<StringQueryOperatorInput>;
  Who_s_competing_: InputMaybe<StringQueryOperatorInput>;
  Who_s_your_GDC_: InputMaybe<StringQueryOperatorInput>;
  Why_am_I_being_charged_for_paper_: InputMaybe<StringQueryOperatorInput>;
  Why_are_we_still_using_non_renewables_: InputMaybe<StringQueryOperatorInput>;
  Why_change_account_holder_: InputMaybe<StringQueryOperatorInput>;
  Why_do_I_need_an_MPAN_: InputMaybe<StringQueryOperatorInput>;
  Why_do_I_need_an_MPRN_: InputMaybe<StringQueryOperatorInput>;
  Why_do_I_need_an_MSN_: InputMaybe<StringQueryOperatorInput>;
  Why_is_it_important_: InputMaybe<StringQueryOperatorInput>;
  Why_is_my_bill_estimated_: InputMaybe<StringQueryOperatorInput>;
  Why_meter_readings_are_important: InputMaybe<StringQueryOperatorInput>;
  Why_should_we_use_it_: InputMaybe<StringQueryOperatorInput>;
  Why_you_should_switch: InputMaybe<StringQueryOperatorInput>;
  Will_it_affect_my_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  Will_it_affect_my_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  Will_it_affect_my_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  Will_my_supply_go_off_: InputMaybe<StringQueryOperatorInput>;
  Will_you_need_a_new_key_card: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysFilterInput>;
};


type Query_contentfulGasElectricityProviderMainPageArgs = {
  category: InputMaybe<StringQueryOperatorInput>;
  childContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenContentfulGasElectricityProviderMainPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  logo: InputMaybe<ContentfulAssetFilterInput>;
  metaDescription: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  provider: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulGasElectricityProviderMainPageSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  metaDescription: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityProviderStandardPageArgs = {
  category: InputMaybe<StringQueryOperatorInput>;
  childContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
  childContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
  childContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenContentfulGasElectricityProviderStandardPageContentTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterListInput>;
  childrenContentfulGasElectricityProviderStandardPageMetaDescriptionTextNode: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterListInput>;
  childrenContentfulGasElectricityProviderStandardPageNavigationJsonNode: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterListInput>;
  content: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  logo: InputMaybe<ContentfulAssetFilterInput>;
  metaDescription: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
  navigation: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  provider: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulGasElectricityProviderStandardPageSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulGasElectricityProviderStandardPageContentTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  content: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  metaDescription: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysFilterInput>;
};


type Query_contentfulGasElectricityProviderStandardPageNavigationJsonNodeArgs = {
  Account_login: InputMaybe<StringQueryOperatorInput>;
  Agile_Octopus: InputMaybe<StringQueryOperatorInput>;
  Alternative_ways_to_save: InputMaybe<StringQueryOperatorInput>;
  Alternatives_if_you_re_not_eligible: InputMaybe<StringQueryOperatorInput>;
  Am_I_eligible_: InputMaybe<StringQueryOperatorInput>;
  App_review: InputMaybe<StringQueryOperatorInput>;
  Apply_for_the_Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  Broader_group_eligibility: InputMaybe<StringQueryOperatorInput>;
  Business_energy_tariffs: InputMaybe<StringQueryOperatorInput>;
  Common_smart_meter_problems: InputMaybe<StringQueryOperatorInput>;
  Complaints_handling: InputMaybe<StringQueryOperatorInput>;
  Contact_SSE: InputMaybe<StringQueryOperatorInput>;
  Contact_the_WHD_team: InputMaybe<StringQueryOperatorInput>;
  Core_group_eligibility: InputMaybe<StringQueryOperatorInput>;
  Customer_service: InputMaybe<StringQueryOperatorInput>;
  Do_I_need_an_EDF_online_account_: InputMaybe<StringQueryOperatorInput>;
  Download_the_app: InputMaybe<StringQueryOperatorInput>;
  Emergency_credit: InputMaybe<StringQueryOperatorInput>;
  Energy_tools: InputMaybe<StringQueryOperatorInput>;
  Eon_Next_reviews: InputMaybe<StringQueryOperatorInput>;
  Fix_my_smart_meter: InputMaybe<StringQueryOperatorInput>;
  Get_a_new_top_up_key_card: InputMaybe<StringQueryOperatorInput>;
  Getting_in_touch: InputMaybe<StringQueryOperatorInput>;
  Give_a_meter_reading: InputMaybe<StringQueryOperatorInput>;
  Homecare_review: InputMaybe<StringQueryOperatorInput>;
  How_do_I_log_in_: InputMaybe<StringQueryOperatorInput>;
  How_do_smart_tariffs_work_: InputMaybe<StringQueryOperatorInput>;
  How_to_get_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  How_to_get_login_details: InputMaybe<StringQueryOperatorInput>;
  How_to_pay_bills: InputMaybe<StringQueryOperatorInput>;
  How_to_read_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  How_to_read_your_meter: InputMaybe<StringQueryOperatorInput>;
  How_to_submit_a_meter_reading: InputMaybe<StringQueryOperatorInput>;
  How_to_switch: InputMaybe<StringQueryOperatorInput>;
  How_to_upgrade: InputMaybe<StringQueryOperatorInput>;
  How_to_view_usage_online: InputMaybe<StringQueryOperatorInput>;
  How_topping_up_works: InputMaybe<StringQueryOperatorInput>;
  I_ve_forgotten_my_email: InputMaybe<StringQueryOperatorInput>;
  I_ve_forgotten_my_password: InputMaybe<StringQueryOperatorInput>;
  I_ve_lost_my_card___key: InputMaybe<StringQueryOperatorInput>;
  In_home_display: InputMaybe<StringQueryOperatorInput>;
  Installation_process: InputMaybe<StringQueryOperatorInput>;
  Intelligent_Octopus: InputMaybe<StringQueryOperatorInput>;
  Is_it_worth_the_money_: InputMaybe<StringQueryOperatorInput>;
  Is_the_Warm_Home_Discount_worth_it_: InputMaybe<StringQueryOperatorInput>;
  Make_a_complaint: InputMaybe<StringQueryOperatorInput>;
  Manual_top_up: InputMaybe<StringQueryOperatorInput>;
  Move_into_new_house: InputMaybe<StringQueryOperatorInput>;
  Move_into_new_premises: InputMaybe<StringQueryOperatorInput>;
  Moving_in_help: InputMaybe<StringQueryOperatorInput>;
  Moving_into_a_new_house: InputMaybe<StringQueryOperatorInput>;
  Moving_out: InputMaybe<StringQueryOperatorInput>;
  Moving_with_a_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  New_house_has_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  Octopus_Go: InputMaybe<StringQueryOperatorInput>;
  Our_verdict: InputMaybe<StringQueryOperatorInput>;
  Pay_my_bills: InputMaybe<StringQueryOperatorInput>;
  Report_a_power_cut: InputMaybe<StringQueryOperatorInput>;
  Smart_meter_top_up: InputMaybe<StringQueryOperatorInput>;
  Switch_provider_or_tariff: InputMaybe<StringQueryOperatorInput>;
  Switch_to_SSE: InputMaybe<StringQueryOperatorInput>;
  Talk_about_my_bill_s_: InputMaybe<StringQueryOperatorInput>;
  Talk_about_something_else: InputMaybe<StringQueryOperatorInput>;
  Tell_British_Gas_you_re_moving: InputMaybe<StringQueryOperatorInput>;
  The_EDF_App: InputMaybe<StringQueryOperatorInput>;
  Top_up_when_on_holiday___: InputMaybe<StringQueryOperatorInput>;
  Transfer_your_tariff: InputMaybe<StringQueryOperatorInput>;
  Troubleshoot_problems: InputMaybe<StringQueryOperatorInput>;
  Upgrade_to_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  Viewing_your_energy_usage_online: InputMaybe<StringQueryOperatorInput>;
  Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  What_can_I_do_through_My_Account_: InputMaybe<StringQueryOperatorInput>;
  What_do_customers_say_: InputMaybe<StringQueryOperatorInput>;
  What_happens_if_I_switch_: InputMaybe<StringQueryOperatorInput>;
  What_is_EDF_Energy_My_Account_: InputMaybe<StringQueryOperatorInput>;
  What_is_a_smart_meter_: InputMaybe<StringQueryOperatorInput>;
  What_is_a_smart_tariff: InputMaybe<StringQueryOperatorInput>;
  What_is_the_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  What_to_do_when_you_move_in: InputMaybe<StringQueryOperatorInput>;
  Where_to_top_up: InputMaybe<StringQueryOperatorInput>;
  Which_group_are_you_: InputMaybe<StringQueryOperatorInput>;
  Which_tariff_is_best_: InputMaybe<StringQueryOperatorInput>;
  Which_tariff_will_I_be_on_: InputMaybe<StringQueryOperatorInput>;
  Who_is_my_new_supplier_: InputMaybe<StringQueryOperatorInput>;
  Why_can_t_I_log_in_: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysFilterInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};

/** Remote Interface */
type RemoteFile = {
  readonly filename: Scalars['String'];
  readonly filesize: Maybe<Scalars['Int']>;
  /** Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info. */
  readonly gatsbyImage: Maybe<Scalars['GatsbyImageData']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly mimeType: Scalars['String'];
  readonly publicUrl: Scalars['String'];
  readonly resize: Maybe<RemoteFileResize>;
  readonly width: Maybe<Scalars['Int']>;
};


/** Remote Interface */
type RemoteFile_gatsbyImageArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  formats?: InputMaybe<ReadonlyArray<RemoteFileFormat>>;
  height: InputMaybe<Scalars['Int']>;
  layout?: InputMaybe<RemoteFileLayout>;
  outputPixelDensities?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder?: InputMaybe<RemoteFilePlaceholder>;
  quality?: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


/** Remote Interface */
type RemoteFile_resizeArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  format?: InputMaybe<RemoteFileFormat>;
  height: InputMaybe<Scalars['Int']>;
  quality?: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type RemoteFileCropFocus =
  | 'bottom'
  | 'center'
  | 'edges'
  | 'entropy'
  | 'faces'
  | 'left'
  | 'right'
  | 'top';

type RemoteFileFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'outside';

type RemoteFileFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | 'png'
  | 'webp';

type RemoteFileLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type RemoteFilePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type RemoteFileResize = {
  readonly height: Maybe<Scalars['Int']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type RemoteFileResizeFieldSelector = {
  readonly height: InputMaybe<FieldSelectorEnum>;
  readonly src: InputMaybe<FieldSelectorEnum>;
  readonly width: InputMaybe<FieldSelectorEnum>;
};

type RemoteFileResizeFilterInput = {
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type RemoteFileResizeSortInput = {
  readonly height: InputMaybe<SortOrderEnum>;
  readonly src: InputMaybe<SortOrderEnum>;
  readonly width: InputMaybe<SortOrderEnum>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldSelector;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldSelector = {
  readonly buildTime: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
};

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldSelector;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldSelector;
};

type SiteBuildMetadataSortInput = {
  readonly buildTime: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldSelector;
};


type SiteConnection_groupArgs = {
  field: SiteFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldSelector;
};


type SiteConnection_minArgs = {
  field: SiteFieldSelector;
};


type SiteConnection_sumArgs = {
  field: SiteFieldSelector;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldSelector = {
  readonly buildTime: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFieldSelector>;
  readonly host: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly jsxRuntime: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly pathPrefix: InputMaybe<FieldSelectorEnum>;
  readonly polyfill: InputMaybe<FieldSelectorEnum>;
  readonly port: InputMaybe<FieldSelectorEnum>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFieldSelector>;
  readonly trailingSlash: InputMaybe<FieldSelectorEnum>;
};

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldSelector;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldSelector = {
  readonly absoluteCompiledFilePath: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly functionRoute: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly matchPath: InputMaybe<FieldSelectorEnum>;
  readonly originalAbsoluteFilePath: InputMaybe<FieldSelectorEnum>;
  readonly originalRelativeFilePath: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly pluginName: InputMaybe<FieldSelectorEnum>;
  readonly relativeCompiledFilePath: InputMaybe<FieldSelectorEnum>;
};

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldSelector;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldSelector;
};

type SiteFunctionSortInput = {
  readonly absoluteCompiledFilePath: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly functionRoute: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly matchPath: InputMaybe<SortOrderEnum>;
  readonly originalAbsoluteFilePath: InputMaybe<SortOrderEnum>;
  readonly originalRelativeFilePath: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly pluginName: InputMaybe<SortOrderEnum>;
  readonly relativeCompiledFilePath: InputMaybe<SortOrderEnum>;
};

type SiteGraphqlTypegen = {
  readonly documentSearchPaths: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly generateOnBuild: Maybe<Scalars['Boolean']>;
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFieldSelector = {
  readonly documentSearchPaths: InputMaybe<FieldSelectorEnum>;
  readonly generateOnBuild: InputMaybe<FieldSelectorEnum>;
  readonly typesOutputPath: InputMaybe<FieldSelectorEnum>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly documentSearchPaths: InputMaybe<StringQueryOperatorInput>;
  readonly generateOnBuild: InputMaybe<BooleanQueryOperatorInput>;
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGraphqlTypegenSortInput = {
  readonly documentSearchPaths: InputMaybe<SortOrderEnum>;
  readonly generateOnBuild: InputMaybe<SortOrderEnum>;
  readonly typesOutputPath: InputMaybe<SortOrderEnum>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldSelector;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldSelector;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldSelector;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldSelector;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldSelector;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldSelector;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldSelector;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldSelector;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly component: InputMaybe<FieldSelectorEnum>;
  readonly componentChunkName: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly internalComponentName: InputMaybe<FieldSelectorEnum>;
  readonly matchPath: InputMaybe<FieldSelectorEnum>;
  readonly pageContext: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly path: InputMaybe<FieldSelectorEnum>;
  readonly pluginCreator: InputMaybe<SitePluginFieldSelector>;
};

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldSelector;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldSelector;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldSelector;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldSelector;
};

type SitePageSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly component: InputMaybe<SortOrderEnum>;
  readonly componentChunkName: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly internalComponentName: InputMaybe<SortOrderEnum>;
  readonly matchPath: InputMaybe<SortOrderEnum>;
  readonly pageContext: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly path: InputMaybe<SortOrderEnum>;
  readonly pluginCreator: InputMaybe<SitePluginSortInput>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldSelector;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldSelector = {
  readonly browserAPIs: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly name: InputMaybe<FieldSelectorEnum>;
  readonly nodeAPIs: InputMaybe<FieldSelectorEnum>;
  readonly packageJson: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly pluginFilepath: InputMaybe<FieldSelectorEnum>;
  readonly pluginOptions: InputMaybe<FieldSelectorEnum>;
  readonly resolve: InputMaybe<FieldSelectorEnum>;
  readonly ssrAPIs: InputMaybe<FieldSelectorEnum>;
  readonly version: InputMaybe<FieldSelectorEnum>;
};

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldSelector;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldSelector;
};

type SitePluginSortInput = {
  readonly browserAPIs: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly name: InputMaybe<SortOrderEnum>;
  readonly nodeAPIs: InputMaybe<SortOrderEnum>;
  readonly packageJson: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly pluginFilepath: InputMaybe<SortOrderEnum>;
  readonly pluginOptions: InputMaybe<SortOrderEnum>;
  readonly resolve: InputMaybe<SortOrderEnum>;
  readonly ssrAPIs: InputMaybe<SortOrderEnum>;
  readonly version: InputMaybe<SortOrderEnum>;
};

type SiteSiteMetadata = {
  readonly description: Maybe<Scalars['String']>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFieldSelector = {
  readonly description: InputMaybe<FieldSelectorEnum>;
  readonly siteUrl: InputMaybe<FieldSelectorEnum>;
  readonly title: InputMaybe<FieldSelectorEnum>;
};

type SiteSiteMetadataFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSiteMetadataSortInput = {
  readonly description: InputMaybe<SortOrderEnum>;
  readonly siteUrl: InputMaybe<SortOrderEnum>;
  readonly title: InputMaybe<SortOrderEnum>;
};

type SiteSortInput = {
  readonly buildTime: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenSortInput>;
  readonly host: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly jsxRuntime: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly pathPrefix: InputMaybe<SortOrderEnum>;
  readonly polyfill: InputMaybe<SortOrderEnum>;
  readonly port: InputMaybe<SortOrderEnum>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataSortInput>;
  readonly trailingSlash: InputMaybe<SortOrderEnum>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly content: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSys>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  readonly node: contentfulGasElectricityGuideCompanyPageContentTextNode;
  readonly previous: Maybe<contentfulGasElectricityGuideCompanyPageContentTextNode>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly content: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSysFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageContentTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly content: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageContentTextNodeSysSortInput>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideCompanyPageContentTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly metaDescription: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSys>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  readonly node: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode;
  readonly previous: Maybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly metaDescription: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly metaDescription: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly metaDescription: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysSortInput>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideCompanyPageMetaDescriptionTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNode = Node & {
  readonly Contact: Maybe<Scalars['String']>;
  readonly Get_connected_to_the_network: Maybe<Scalars['String']>;
  readonly Power_cuts: Maybe<Scalars['String']>;
  readonly Priority_Services_Register: Maybe<Scalars['String']>;
  readonly What_can_they_help_you_with_: Maybe<Scalars['String']>;
  readonly What_they_do_: Maybe<Scalars['String']>;
  readonly Where_do_they_power_: Maybe<Scalars['String']>;
  readonly Whis_are_they_: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSys>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly node: contentfulGasElectricityGuideCompanyPageNavigationJsonNode;
  readonly previous: Maybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector = {
  readonly Contact: InputMaybe<FieldSelectorEnum>;
  readonly Get_connected_to_the_network: InputMaybe<FieldSelectorEnum>;
  readonly Power_cuts: InputMaybe<FieldSelectorEnum>;
  readonly Priority_Services_Register: InputMaybe<FieldSelectorEnum>;
  readonly What_can_they_help_you_with_: InputMaybe<FieldSelectorEnum>;
  readonly What_they_do_: InputMaybe<FieldSelectorEnum>;
  readonly Where_do_they_power_: InputMaybe<FieldSelectorEnum>;
  readonly Whis_are_they_: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput = {
  readonly Contact: InputMaybe<StringQueryOperatorInput>;
  readonly Get_connected_to_the_network: InputMaybe<StringQueryOperatorInput>;
  readonly Power_cuts: InputMaybe<StringQueryOperatorInput>;
  readonly Priority_Services_Register: InputMaybe<StringQueryOperatorInput>;
  readonly What_can_they_help_you_with_: InputMaybe<StringQueryOperatorInput>;
  readonly What_they_do_: InputMaybe<StringQueryOperatorInput>;
  readonly Where_do_they_power_: InputMaybe<StringQueryOperatorInput>;
  readonly Whis_are_they_: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFilterInput>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideCompanyPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideCompanyPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSortInput = {
  readonly Contact: InputMaybe<SortOrderEnum>;
  readonly Get_connected_to_the_network: InputMaybe<SortOrderEnum>;
  readonly Power_cuts: InputMaybe<SortOrderEnum>;
  readonly Priority_Services_Register: InputMaybe<SortOrderEnum>;
  readonly What_can_they_help_you_with_: InputMaybe<SortOrderEnum>;
  readonly What_they_do_: InputMaybe<SortOrderEnum>;
  readonly Where_do_they_power_: InputMaybe<SortOrderEnum>;
  readonly Whis_are_they_: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysSortInput>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideCompanyPageNavigationJsonNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityGuideStandardPageContentTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly content: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideStandardPageContentTextNodeSys>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageContentTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>;
  readonly node: contentfulGasElectricityGuideStandardPageContentTextNode;
  readonly previous: Maybe<contentfulGasElectricityGuideStandardPageContentTextNode>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly content: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSysFilterInput>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeFilterInput>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageContentTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly content: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageContentTextNodeSysSortInput>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideStandardPageContentTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly metaDescription: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSys>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  readonly node: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode;
  readonly previous: Maybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly metaDescription: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly metaDescription: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysFilterInput>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFilterInput>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly metaDescription: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysSortInput>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideStandardPageMetaDescriptionTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNode = Node & {
  readonly Advantages: Maybe<Scalars['String']>;
  readonly Advantages_of_online: Maybe<Scalars['String']>;
  readonly Advantages_of_paper: Maybe<Scalars['String']>;
  readonly Are_smart_meters_dangerous_: Maybe<Scalars['String']>;
  readonly Around_the_world: Maybe<Scalars['String']>;
  readonly Average_energy_usage: Maybe<Scalars['String']>;
  readonly Awards: Maybe<Scalars['String']>;
  readonly Biomass_boilers: Maybe<Scalars['String']>;
  readonly Booking_and_installation: Maybe<Scalars['String']>;
  readonly Business_energy_meter_types: Maybe<Scalars['String']>;
  readonly Calculating_kWh_usage: Maybe<Scalars['String']>;
  readonly Calculating_usage: Maybe<Scalars['String']>;
  readonly Can_someone_unplug_you_: Maybe<Scalars['String']>;
  readonly Can_students_switch_: Maybe<Scalars['String']>;
  readonly Can_you_change_your_meter_: Maybe<Scalars['String']>;
  readonly Can_you_switch_to_a_standard_tariff_: Maybe<Scalars['String']>;
  readonly Can_you_switch_when_renting: Maybe<Scalars['String']>;
  readonly Change_account_holder: Maybe<Scalars['String']>;
  readonly Change_account_holder_s_name: Maybe<Scalars['String']>;
  readonly Changing_account_holder_when_moving_house: Maybe<Scalars['String']>;
  readonly Changing_your_meter: Maybe<Scalars['String']>;
  readonly Charging: Maybe<Scalars['String']>;
  readonly Claiming_VAT: Maybe<Scalars['String']>;
  readonly Claiming_compensation: Maybe<Scalars['String']>;
  readonly Complaints___resultion: Maybe<Scalars['String']>;
  readonly Complaints_about_your_supplier: Maybe<Scalars['String']>;
  readonly Credit_on_prepayment_meter: Maybe<Scalars['String']>;
  readonly DNOs___home_energy_systems: Maybe<Scalars['String']>;
  readonly Difference_between_serial_numbers: Maybe<Scalars['String']>;
  readonly Different_tariff_types: Maybe<Scalars['String']>;
  readonly Disadvantages: Maybe<Scalars['String']>;
  readonly Do_I_have_Economy_7_: Maybe<Scalars['String']>;
  readonly Do_all_providers_offer_dual_fuel: Maybe<Scalars['String']>;
  readonly Do_you_need_a_smart_meter_: Maybe<Scalars['String']>;
  readonly Domestication: Maybe<Scalars['String']>;
  readonly Dual_fuel_vs_single_fuel_tariffs: Maybe<Scalars['String']>;
  readonly Economy_7_prepayment: Maybe<Scalars['String']>;
  readonly Economy_10_meters: Maybe<Scalars['String']>;
  readonly Eligibility_criteria: Maybe<Scalars['String']>;
  readonly Environmental_impact: Maybe<Scalars['String']>;
  readonly Exempt___reduced_rate_products: Maybe<Scalars['String']>;
  readonly For_business: Maybe<Scalars['String']>;
  readonly Ground_source_heat_pumps: Maybe<Scalars['String']>;
  readonly Having_more_than_one_account_holder: Maybe<Scalars['String']>;
  readonly Heating: Maybe<Scalars['String']>;
  readonly Help_available_for_users: Maybe<Scalars['String']>;
  readonly Home_wind_turbines: Maybe<Scalars['String']>;
  readonly How_Economy_7_works: Maybe<Scalars['String']>;
  readonly How_biomass_works: Maybe<Scalars['String']>;
  readonly How_can_I_save_: Maybe<Scalars['String']>;
  readonly How_do_I_find_my_MPAN_: Maybe<Scalars['String']>;
  readonly How_do_I_find_my_MPRN_: Maybe<Scalars['String']>;
  readonly How_do_I_find_my_MSN_: Maybe<Scalars['String']>;
  readonly How_do_smart_meters_work_: Maybe<Scalars['String']>;
  readonly How_do_they_work_: Maybe<Scalars['String']>;
  readonly How_do_we_become_net_zero_: Maybe<Scalars['String']>;
  readonly How_do_you_know_when_to_top_up_: Maybe<Scalars['String']>;
  readonly How_far_does_one_charge_take_you_: Maybe<Scalars['String']>;
  readonly How_geothermal_works: Maybe<Scalars['String']>;
  readonly How_hydropower_works: Maybe<Scalars['String']>;
  readonly How_long_does_it_take_: Maybe<Scalars['String']>;
  readonly How_much_can_you_claim_: Maybe<Scalars['String']>;
  readonly How_much_can_you_save_: Maybe<Scalars['String']>;
  readonly How_much_could_you_save_: Maybe<Scalars['String']>;
  readonly How_much_does_it_cost_: Maybe<Scalars['String']>;
  readonly How_much_does_one_kWh_cost_: Maybe<Scalars['String']>;
  readonly How_much_energy_should_you_use_: Maybe<Scalars['String']>;
  readonly How_much_is_one_kWh_: Maybe<Scalars['String']>;
  readonly How_much_renewable_are_we_using_: Maybe<Scalars['String']>;
  readonly How_solar_power_works: Maybe<Scalars['String']>;
  readonly How_the_UK_is_working_towards_green_future: Maybe<Scalars['String']>;
  readonly How_to_add_or_remove: Maybe<Scalars['String']>;
  readonly How_to_apply: Maybe<Scalars['String']>;
  readonly How_to_be_prepared: Maybe<Scalars['String']>;
  readonly How_to_calculate_your_usage_: Maybe<Scalars['String']>;
  readonly How_to_claim: Maybe<Scalars['String']>;
  readonly How_to_compare: Maybe<Scalars['String']>;
  readonly How_to_cut_back_on_usage: Maybe<Scalars['String']>;
  readonly How_to_decrease_bills_: Maybe<Scalars['String']>;
  readonly How_to_find_your_new_supplier: Maybe<Scalars['String']>;
  readonly How_to_get_a_new_key_or_card: Maybe<Scalars['String']>;
  readonly How_to_install_a_charger_at_home: Maybe<Scalars['String']>;
  readonly How_to_know_if_you_have_a_dual_tariff: Maybe<Scalars['String']>;
  readonly How_to_read_a_smart_meter: Maybe<Scalars['String']>;
  readonly How_to_read_an_Economy_7_meter_: Maybe<Scalars['String']>;
  readonly How_to_report_a_gas_leak: Maybe<Scalars['String']>;
  readonly How_to_report_a_power_cut: Maybe<Scalars['String']>;
  readonly How_to_report_a_power_cut_: Maybe<Scalars['String']>;
  readonly How_to_save_energy: Maybe<Scalars['String']>;
  readonly How_to_save_if_you_can_t_change_: Maybe<Scalars['String']>;
  readonly How_to_save_money: Maybe<Scalars['String']>;
  readonly How_to_switch: Maybe<Scalars['String']>;
  readonly How_wind_energy_works: Maybe<Scalars['String']>;
  readonly I_can_t_pay_my_energy_bills: Maybe<Scalars['String']>;
  readonly I_have_more_than_one_MPAN: Maybe<Scalars['String']>;
  readonly I_haven_t_been_sent_a_bill: Maybe<Scalars['String']>;
  readonly If_the_account_holder_passes_away: Maybe<Scalars['String']>;
  readonly If_you_can_t_afford_to_top_up: Maybe<Scalars['String']>;
  readonly In_home_display: Maybe<Scalars['String']>;
  readonly In_the_UK: Maybe<Scalars['String']>;
  readonly Indendent_DNOs: Maybe<Scalars['String']>;
  readonly Installation: Maybe<Scalars['String']>;
  readonly Is_Economy_7_for_gas___electricity_: Maybe<Scalars['String']>;
  readonly Is_is_good_for_the_environment: Maybe<Scalars['String']>;
  readonly Is_there_a_DNO_for_gas_: Maybe<Scalars['String']>;
  readonly MSN_doesn_t_match_my_bill: Maybe<Scalars['String']>;
  readonly Making_the_most_of_Economy_7: Maybe<Scalars['String']>;
  readonly Moving_your_meter: Maybe<Scalars['String']>;
  readonly My_smart_meter_is_beeping: Maybe<Scalars['String']>;
  readonly Power_plants: Maybe<Scalars['String']>;
  readonly Priority_Services_Register: Maybe<Scalars['String']>;
  readonly Pros___cons: Maybe<Scalars['String']>;
  readonly Reading_your_electricity_meter: Maybe<Scalars['String']>;
  readonly Reading_your_gas_meter: Maybe<Scalars['String']>;
  readonly Reading_your_meter: Maybe<Scalars['String']>;
  readonly Reading_your_smart_meter: Maybe<Scalars['String']>;
  readonly Residential_vs_business_meters: Maybe<Scalars['String']>;
  readonly Reviews: Maybe<Scalars['String']>;
  readonly Saving_money: Maybe<Scalars['String']>;
  readonly Should_you_switch_tariff_or_provider_: Maybe<Scalars['String']>;
  readonly Smart_Economy_7_meters: Maybe<Scalars['String']>;
  readonly Smart_meter_rollout: Maybe<Scalars['String']>;
  readonly Smart_meters: Maybe<Scalars['String']>;
  readonly Solar_energy_for_business: Maybe<Scalars['String']>;
  readonly Solar_panel_care: Maybe<Scalars['String']>;
  readonly Submitting_your_meter_readings: Maybe<Scalars['String']>;
  readonly Switch_tariffs_or_providers: Maybe<Scalars['String']>;
  readonly Switch_to_100__renewables: Maybe<Scalars['String']>;
  readonly Switch_to_online_bills: Maybe<Scalars['String']>;
  readonly Switch_to_paper: Maybe<Scalars['String']>;
  readonly Switching_before_you_have_a_new_supplier: Maybe<Scalars['String']>;
  readonly Tariffs___pricing: Maybe<Scalars['String']>;
  readonly Terms_on_your_energy_bill: Maybe<Scalars['String']>;
  readonly The_importance_of_the_water_cycle: Maybe<Scalars['String']>;
  readonly Things_to_know_before: Maybe<Scalars['String']>;
  readonly Top_tips_for_switching_as_a_tenant: Maybe<Scalars['String']>;
  readonly Top_up_errors: Maybe<Scalars['String']>;
  readonly Topping_up: Maybe<Scalars['String']>;
  readonly Types_of_meter: Maybe<Scalars['String']>;
  readonly Types_of_renewables: Maybe<Scalars['String']>;
  readonly Types_of_solar_panel: Maybe<Scalars['String']>;
  readonly UK_average_energy_usage: Maybe<Scalars['String']>;
  readonly Upgrading_to_a_smart_meter: Maybe<Scalars['String']>;
  readonly VAT_reduced_rates: Maybe<Scalars['String']>;
  readonly WIll_it_affect_my_Cold_Weather_Payment_: Maybe<Scalars['String']>;
  readonly WIll_it_affect_my_Winter_Fuel_Payment_: Maybe<Scalars['String']>;
  readonly Warm_Home_Discount: Maybe<Scalars['String']>;
  readonly What_VAT_relief_is_available_: Maybe<Scalars['String']>;
  readonly What_affects_a_business__usage_: Maybe<Scalars['String']>;
  readonly What_affects_your_usage_: Maybe<Scalars['String']>;
  readonly What_are_the_times_: Maybe<Scalars['String']>;
  readonly What_are_we_doing_to_become_net_zero_: Maybe<Scalars['String']>;
  readonly What_cuases_a_power_cut_: Maybe<Scalars['String']>;
  readonly What_does_a_bill_cover_: Maybe<Scalars['String']>;
  readonly What_does_it_mean_for_you_: Maybe<Scalars['String']>;
  readonly What_happens_: Maybe<Scalars['String']>;
  readonly What_happens_if_I_switch_providers_: Maybe<Scalars['String']>;
  readonly What_happens_if_you_don_t_submit: Maybe<Scalars['String']>;
  readonly What_happens_if_you_switch_: Maybe<Scalars['String']>;
  readonly What_happens_to_money_owed: Maybe<Scalars['String']>;
  readonly What_happens_to_unused_energy_: Maybe<Scalars['String']>;
  readonly What_happens_to_your_tariff: Maybe<Scalars['String']>;
  readonly What_is_Economy_7_: Maybe<Scalars['String']>;
  readonly What_is_a_DNO_: Maybe<Scalars['String']>;
  readonly What_is_a_kilowatt_hour_: Maybe<Scalars['String']>;
  readonly What_is_an_MPAN_: Maybe<Scalars['String']>;
  readonly What_is_an_MPRN_: Maybe<Scalars['String']>;
  readonly What_is_an_MSN_: Maybe<Scalars['String']>;
  readonly What_is_dual_fuel: Maybe<Scalars['String']>;
  readonly What_is_net_zero_: Maybe<Scalars['String']>;
  readonly What_is_prepayment_: Maybe<Scalars['String']>;
  readonly What_is_the_Warm_Home_Discount_: Maybe<Scalars['String']>;
  readonly What_is_the_difference_: Maybe<Scalars['String']>;
  readonly What_it_the_Cold_Weather_Payment_: Maybe<Scalars['String']>;
  readonly What_it_the_Winter_Fuel_Payment_: Maybe<Scalars['String']>;
  readonly What_makes_energy_renewable_: Maybe<Scalars['String']>;
  readonly What_s_the_difference_: Maybe<Scalars['String']>;
  readonly What_to_do_: Maybe<Scalars['String']>;
  readonly What_to_do_before_switching: Maybe<Scalars['String']>;
  readonly What_to_do_if_you_run_out_of_charge_: Maybe<Scalars['String']>;
  readonly What_to_look_for_: Maybe<Scalars['String']>;
  readonly What_to_look_out_for: Maybe<Scalars['String']>;
  readonly What_you_can_find_on_a_bill: Maybe<Scalars['String']>;
  readonly What_you_need_to_do: Maybe<Scalars['String']>;
  readonly When_is_it_paid_: Maybe<Scalars['String']>;
  readonly When_to_submit_your_readings: Maybe<Scalars['String']>;
  readonly Where_is_the_best_location_for_geothermal_: Maybe<Scalars['String']>;
  readonly Where_to_charge_your_EV: Maybe<Scalars['String']>;
  readonly Where_to_find_your_bills_online: Maybe<Scalars['String']>;
  readonly Which_is_better_for_you_: Maybe<Scalars['String']>;
  readonly Which_is_the_best_: Maybe<Scalars['String']>;
  readonly Which_meter_is_best_: Maybe<Scalars['String']>;
  readonly Which_providers_offer_it_: Maybe<Scalars['String']>;
  readonly Which_providers_offer_smart_meters_: Maybe<Scalars['String']>;
  readonly Which_suppliers_have_gone_bust_already_: Maybe<Scalars['String']>;
  readonly Which_tariffs_are_available_: Maybe<Scalars['String']>;
  readonly Who_can_get_dual_tariffs: Maybe<Scalars['String']>;
  readonly Who_is_your_DNO_: Maybe<Scalars['String']>;
  readonly Who_s_competing_: Maybe<Scalars['String']>;
  readonly Who_s_your_GDC_: Maybe<Scalars['String']>;
  readonly Why_am_I_being_charged_for_paper_: Maybe<Scalars['String']>;
  readonly Why_are_we_still_using_non_renewables_: Maybe<Scalars['String']>;
  readonly Why_change_account_holder_: Maybe<Scalars['String']>;
  readonly Why_do_I_need_an_MPAN_: Maybe<Scalars['String']>;
  readonly Why_do_I_need_an_MPRN_: Maybe<Scalars['String']>;
  readonly Why_do_I_need_an_MSN_: Maybe<Scalars['String']>;
  readonly Why_is_it_important_: Maybe<Scalars['String']>;
  readonly Why_is_my_bill_estimated_: Maybe<Scalars['String']>;
  readonly Why_meter_readings_are_important: Maybe<Scalars['String']>;
  readonly Why_should_we_use_it_: Maybe<Scalars['String']>;
  readonly Why_you_should_switch: Maybe<Scalars['String']>;
  readonly Will_it_affect_my_Cold_Weather_Payment_: Maybe<Scalars['String']>;
  readonly Will_it_affect_my_Warm_Home_Discount_: Maybe<Scalars['String']>;
  readonly Will_it_affect_my_Winter_Fuel_Payment_: Maybe<Scalars['String']>;
  readonly Will_my_supply_go_off_: Maybe<Scalars['String']>;
  readonly Will_you_need_a_new_key_card: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSys>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly node: contentfulGasElectricityGuideStandardPageNavigationJsonNode;
  readonly previous: Maybe<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector = {
  readonly Advantages: InputMaybe<FieldSelectorEnum>;
  readonly Advantages_of_online: InputMaybe<FieldSelectorEnum>;
  readonly Advantages_of_paper: InputMaybe<FieldSelectorEnum>;
  readonly Are_smart_meters_dangerous_: InputMaybe<FieldSelectorEnum>;
  readonly Around_the_world: InputMaybe<FieldSelectorEnum>;
  readonly Average_energy_usage: InputMaybe<FieldSelectorEnum>;
  readonly Awards: InputMaybe<FieldSelectorEnum>;
  readonly Biomass_boilers: InputMaybe<FieldSelectorEnum>;
  readonly Booking_and_installation: InputMaybe<FieldSelectorEnum>;
  readonly Business_energy_meter_types: InputMaybe<FieldSelectorEnum>;
  readonly Calculating_kWh_usage: InputMaybe<FieldSelectorEnum>;
  readonly Calculating_usage: InputMaybe<FieldSelectorEnum>;
  readonly Can_someone_unplug_you_: InputMaybe<FieldSelectorEnum>;
  readonly Can_students_switch_: InputMaybe<FieldSelectorEnum>;
  readonly Can_you_change_your_meter_: InputMaybe<FieldSelectorEnum>;
  readonly Can_you_switch_to_a_standard_tariff_: InputMaybe<FieldSelectorEnum>;
  readonly Can_you_switch_when_renting: InputMaybe<FieldSelectorEnum>;
  readonly Change_account_holder: InputMaybe<FieldSelectorEnum>;
  readonly Change_account_holder_s_name: InputMaybe<FieldSelectorEnum>;
  readonly Changing_account_holder_when_moving_house: InputMaybe<FieldSelectorEnum>;
  readonly Changing_your_meter: InputMaybe<FieldSelectorEnum>;
  readonly Charging: InputMaybe<FieldSelectorEnum>;
  readonly Claiming_VAT: InputMaybe<FieldSelectorEnum>;
  readonly Claiming_compensation: InputMaybe<FieldSelectorEnum>;
  readonly Complaints___resultion: InputMaybe<FieldSelectorEnum>;
  readonly Complaints_about_your_supplier: InputMaybe<FieldSelectorEnum>;
  readonly Credit_on_prepayment_meter: InputMaybe<FieldSelectorEnum>;
  readonly DNOs___home_energy_systems: InputMaybe<FieldSelectorEnum>;
  readonly Difference_between_serial_numbers: InputMaybe<FieldSelectorEnum>;
  readonly Different_tariff_types: InputMaybe<FieldSelectorEnum>;
  readonly Disadvantages: InputMaybe<FieldSelectorEnum>;
  readonly Do_I_have_Economy_7_: InputMaybe<FieldSelectorEnum>;
  readonly Do_all_providers_offer_dual_fuel: InputMaybe<FieldSelectorEnum>;
  readonly Do_you_need_a_smart_meter_: InputMaybe<FieldSelectorEnum>;
  readonly Domestication: InputMaybe<FieldSelectorEnum>;
  readonly Dual_fuel_vs_single_fuel_tariffs: InputMaybe<FieldSelectorEnum>;
  readonly Economy_7_prepayment: InputMaybe<FieldSelectorEnum>;
  readonly Economy_10_meters: InputMaybe<FieldSelectorEnum>;
  readonly Eligibility_criteria: InputMaybe<FieldSelectorEnum>;
  readonly Environmental_impact: InputMaybe<FieldSelectorEnum>;
  readonly Exempt___reduced_rate_products: InputMaybe<FieldSelectorEnum>;
  readonly For_business: InputMaybe<FieldSelectorEnum>;
  readonly Ground_source_heat_pumps: InputMaybe<FieldSelectorEnum>;
  readonly Having_more_than_one_account_holder: InputMaybe<FieldSelectorEnum>;
  readonly Heating: InputMaybe<FieldSelectorEnum>;
  readonly Help_available_for_users: InputMaybe<FieldSelectorEnum>;
  readonly Home_wind_turbines: InputMaybe<FieldSelectorEnum>;
  readonly How_Economy_7_works: InputMaybe<FieldSelectorEnum>;
  readonly How_biomass_works: InputMaybe<FieldSelectorEnum>;
  readonly How_can_I_save_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_I_find_my_MPAN_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_I_find_my_MPRN_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_I_find_my_MSN_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_smart_meters_work_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_they_work_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_we_become_net_zero_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_you_know_when_to_top_up_: InputMaybe<FieldSelectorEnum>;
  readonly How_far_does_one_charge_take_you_: InputMaybe<FieldSelectorEnum>;
  readonly How_geothermal_works: InputMaybe<FieldSelectorEnum>;
  readonly How_hydropower_works: InputMaybe<FieldSelectorEnum>;
  readonly How_long_does_it_take_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_can_you_claim_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_can_you_save_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_could_you_save_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_does_it_cost_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_does_one_kWh_cost_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_energy_should_you_use_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_is_one_kWh_: InputMaybe<FieldSelectorEnum>;
  readonly How_much_renewable_are_we_using_: InputMaybe<FieldSelectorEnum>;
  readonly How_solar_power_works: InputMaybe<FieldSelectorEnum>;
  readonly How_the_UK_is_working_towards_green_future: InputMaybe<FieldSelectorEnum>;
  readonly How_to_add_or_remove: InputMaybe<FieldSelectorEnum>;
  readonly How_to_apply: InputMaybe<FieldSelectorEnum>;
  readonly How_to_be_prepared: InputMaybe<FieldSelectorEnum>;
  readonly How_to_calculate_your_usage_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_claim: InputMaybe<FieldSelectorEnum>;
  readonly How_to_compare: InputMaybe<FieldSelectorEnum>;
  readonly How_to_cut_back_on_usage: InputMaybe<FieldSelectorEnum>;
  readonly How_to_decrease_bills_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_find_your_new_supplier: InputMaybe<FieldSelectorEnum>;
  readonly How_to_get_a_new_key_or_card: InputMaybe<FieldSelectorEnum>;
  readonly How_to_install_a_charger_at_home: InputMaybe<FieldSelectorEnum>;
  readonly How_to_know_if_you_have_a_dual_tariff: InputMaybe<FieldSelectorEnum>;
  readonly How_to_read_a_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly How_to_read_an_Economy_7_meter_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_report_a_gas_leak: InputMaybe<FieldSelectorEnum>;
  readonly How_to_report_a_power_cut: InputMaybe<FieldSelectorEnum>;
  readonly How_to_report_a_power_cut_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_save_energy: InputMaybe<FieldSelectorEnum>;
  readonly How_to_save_if_you_can_t_change_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_save_money: InputMaybe<FieldSelectorEnum>;
  readonly How_to_switch: InputMaybe<FieldSelectorEnum>;
  readonly How_wind_energy_works: InputMaybe<FieldSelectorEnum>;
  readonly I_can_t_pay_my_energy_bills: InputMaybe<FieldSelectorEnum>;
  readonly I_have_more_than_one_MPAN: InputMaybe<FieldSelectorEnum>;
  readonly I_haven_t_been_sent_a_bill: InputMaybe<FieldSelectorEnum>;
  readonly If_the_account_holder_passes_away: InputMaybe<FieldSelectorEnum>;
  readonly If_you_can_t_afford_to_top_up: InputMaybe<FieldSelectorEnum>;
  readonly In_home_display: InputMaybe<FieldSelectorEnum>;
  readonly In_the_UK: InputMaybe<FieldSelectorEnum>;
  readonly Indendent_DNOs: InputMaybe<FieldSelectorEnum>;
  readonly Installation: InputMaybe<FieldSelectorEnum>;
  readonly Is_Economy_7_for_gas___electricity_: InputMaybe<FieldSelectorEnum>;
  readonly Is_is_good_for_the_environment: InputMaybe<FieldSelectorEnum>;
  readonly Is_there_a_DNO_for_gas_: InputMaybe<FieldSelectorEnum>;
  readonly MSN_doesn_t_match_my_bill: InputMaybe<FieldSelectorEnum>;
  readonly Making_the_most_of_Economy_7: InputMaybe<FieldSelectorEnum>;
  readonly Moving_your_meter: InputMaybe<FieldSelectorEnum>;
  readonly My_smart_meter_is_beeping: InputMaybe<FieldSelectorEnum>;
  readonly Power_plants: InputMaybe<FieldSelectorEnum>;
  readonly Priority_Services_Register: InputMaybe<FieldSelectorEnum>;
  readonly Pros___cons: InputMaybe<FieldSelectorEnum>;
  readonly Reading_your_electricity_meter: InputMaybe<FieldSelectorEnum>;
  readonly Reading_your_gas_meter: InputMaybe<FieldSelectorEnum>;
  readonly Reading_your_meter: InputMaybe<FieldSelectorEnum>;
  readonly Reading_your_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly Residential_vs_business_meters: InputMaybe<FieldSelectorEnum>;
  readonly Reviews: InputMaybe<FieldSelectorEnum>;
  readonly Saving_money: InputMaybe<FieldSelectorEnum>;
  readonly Should_you_switch_tariff_or_provider_: InputMaybe<FieldSelectorEnum>;
  readonly Smart_Economy_7_meters: InputMaybe<FieldSelectorEnum>;
  readonly Smart_meter_rollout: InputMaybe<FieldSelectorEnum>;
  readonly Smart_meters: InputMaybe<FieldSelectorEnum>;
  readonly Solar_energy_for_business: InputMaybe<FieldSelectorEnum>;
  readonly Solar_panel_care: InputMaybe<FieldSelectorEnum>;
  readonly Submitting_your_meter_readings: InputMaybe<FieldSelectorEnum>;
  readonly Switch_tariffs_or_providers: InputMaybe<FieldSelectorEnum>;
  readonly Switch_to_100__renewables: InputMaybe<FieldSelectorEnum>;
  readonly Switch_to_online_bills: InputMaybe<FieldSelectorEnum>;
  readonly Switch_to_paper: InputMaybe<FieldSelectorEnum>;
  readonly Switching_before_you_have_a_new_supplier: InputMaybe<FieldSelectorEnum>;
  readonly Tariffs___pricing: InputMaybe<FieldSelectorEnum>;
  readonly Terms_on_your_energy_bill: InputMaybe<FieldSelectorEnum>;
  readonly The_importance_of_the_water_cycle: InputMaybe<FieldSelectorEnum>;
  readonly Things_to_know_before: InputMaybe<FieldSelectorEnum>;
  readonly Top_tips_for_switching_as_a_tenant: InputMaybe<FieldSelectorEnum>;
  readonly Top_up_errors: InputMaybe<FieldSelectorEnum>;
  readonly Topping_up: InputMaybe<FieldSelectorEnum>;
  readonly Types_of_meter: InputMaybe<FieldSelectorEnum>;
  readonly Types_of_renewables: InputMaybe<FieldSelectorEnum>;
  readonly Types_of_solar_panel: InputMaybe<FieldSelectorEnum>;
  readonly UK_average_energy_usage: InputMaybe<FieldSelectorEnum>;
  readonly Upgrading_to_a_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly VAT_reduced_rates: InputMaybe<FieldSelectorEnum>;
  readonly WIll_it_affect_my_Cold_Weather_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly WIll_it_affect_my_Winter_Fuel_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly Warm_Home_Discount: InputMaybe<FieldSelectorEnum>;
  readonly What_VAT_relief_is_available_: InputMaybe<FieldSelectorEnum>;
  readonly What_affects_a_business__usage_: InputMaybe<FieldSelectorEnum>;
  readonly What_affects_your_usage_: InputMaybe<FieldSelectorEnum>;
  readonly What_are_the_times_: InputMaybe<FieldSelectorEnum>;
  readonly What_are_we_doing_to_become_net_zero_: InputMaybe<FieldSelectorEnum>;
  readonly What_cuases_a_power_cut_: InputMaybe<FieldSelectorEnum>;
  readonly What_does_a_bill_cover_: InputMaybe<FieldSelectorEnum>;
  readonly What_does_it_mean_for_you_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_if_I_switch_providers_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_if_you_don_t_submit: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_if_you_switch_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_to_money_owed: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_to_unused_energy_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_to_your_tariff: InputMaybe<FieldSelectorEnum>;
  readonly What_is_Economy_7_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_a_DNO_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_a_kilowatt_hour_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_an_MPAN_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_an_MPRN_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_an_MSN_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_dual_fuel: InputMaybe<FieldSelectorEnum>;
  readonly What_is_net_zero_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_prepayment_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_the_difference_: InputMaybe<FieldSelectorEnum>;
  readonly What_it_the_Cold_Weather_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly What_it_the_Winter_Fuel_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly What_makes_energy_renewable_: InputMaybe<FieldSelectorEnum>;
  readonly What_s_the_difference_: InputMaybe<FieldSelectorEnum>;
  readonly What_to_do_: InputMaybe<FieldSelectorEnum>;
  readonly What_to_do_before_switching: InputMaybe<FieldSelectorEnum>;
  readonly What_to_do_if_you_run_out_of_charge_: InputMaybe<FieldSelectorEnum>;
  readonly What_to_look_for_: InputMaybe<FieldSelectorEnum>;
  readonly What_to_look_out_for: InputMaybe<FieldSelectorEnum>;
  readonly What_you_can_find_on_a_bill: InputMaybe<FieldSelectorEnum>;
  readonly What_you_need_to_do: InputMaybe<FieldSelectorEnum>;
  readonly When_is_it_paid_: InputMaybe<FieldSelectorEnum>;
  readonly When_to_submit_your_readings: InputMaybe<FieldSelectorEnum>;
  readonly Where_is_the_best_location_for_geothermal_: InputMaybe<FieldSelectorEnum>;
  readonly Where_to_charge_your_EV: InputMaybe<FieldSelectorEnum>;
  readonly Where_to_find_your_bills_online: InputMaybe<FieldSelectorEnum>;
  readonly Which_is_better_for_you_: InputMaybe<FieldSelectorEnum>;
  readonly Which_is_the_best_: InputMaybe<FieldSelectorEnum>;
  readonly Which_meter_is_best_: InputMaybe<FieldSelectorEnum>;
  readonly Which_providers_offer_it_: InputMaybe<FieldSelectorEnum>;
  readonly Which_providers_offer_smart_meters_: InputMaybe<FieldSelectorEnum>;
  readonly Which_suppliers_have_gone_bust_already_: InputMaybe<FieldSelectorEnum>;
  readonly Which_tariffs_are_available_: InputMaybe<FieldSelectorEnum>;
  readonly Who_can_get_dual_tariffs: InputMaybe<FieldSelectorEnum>;
  readonly Who_is_your_DNO_: InputMaybe<FieldSelectorEnum>;
  readonly Who_s_competing_: InputMaybe<FieldSelectorEnum>;
  readonly Who_s_your_GDC_: InputMaybe<FieldSelectorEnum>;
  readonly Why_am_I_being_charged_for_paper_: InputMaybe<FieldSelectorEnum>;
  readonly Why_are_we_still_using_non_renewables_: InputMaybe<FieldSelectorEnum>;
  readonly Why_change_account_holder_: InputMaybe<FieldSelectorEnum>;
  readonly Why_do_I_need_an_MPAN_: InputMaybe<FieldSelectorEnum>;
  readonly Why_do_I_need_an_MPRN_: InputMaybe<FieldSelectorEnum>;
  readonly Why_do_I_need_an_MSN_: InputMaybe<FieldSelectorEnum>;
  readonly Why_is_it_important_: InputMaybe<FieldSelectorEnum>;
  readonly Why_is_my_bill_estimated_: InputMaybe<FieldSelectorEnum>;
  readonly Why_meter_readings_are_important: InputMaybe<FieldSelectorEnum>;
  readonly Why_should_we_use_it_: InputMaybe<FieldSelectorEnum>;
  readonly Why_you_should_switch: InputMaybe<FieldSelectorEnum>;
  readonly Will_it_affect_my_Cold_Weather_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly Will_it_affect_my_Warm_Home_Discount_: InputMaybe<FieldSelectorEnum>;
  readonly Will_it_affect_my_Winter_Fuel_Payment_: InputMaybe<FieldSelectorEnum>;
  readonly Will_my_supply_go_off_: InputMaybe<FieldSelectorEnum>;
  readonly Will_you_need_a_new_key_card: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysFieldSelector>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput = {
  readonly Advantages: InputMaybe<StringQueryOperatorInput>;
  readonly Advantages_of_online: InputMaybe<StringQueryOperatorInput>;
  readonly Advantages_of_paper: InputMaybe<StringQueryOperatorInput>;
  readonly Are_smart_meters_dangerous_: InputMaybe<StringQueryOperatorInput>;
  readonly Around_the_world: InputMaybe<StringQueryOperatorInput>;
  readonly Average_energy_usage: InputMaybe<StringQueryOperatorInput>;
  readonly Awards: InputMaybe<StringQueryOperatorInput>;
  readonly Biomass_boilers: InputMaybe<StringQueryOperatorInput>;
  readonly Booking_and_installation: InputMaybe<StringQueryOperatorInput>;
  readonly Business_energy_meter_types: InputMaybe<StringQueryOperatorInput>;
  readonly Calculating_kWh_usage: InputMaybe<StringQueryOperatorInput>;
  readonly Calculating_usage: InputMaybe<StringQueryOperatorInput>;
  readonly Can_someone_unplug_you_: InputMaybe<StringQueryOperatorInput>;
  readonly Can_students_switch_: InputMaybe<StringQueryOperatorInput>;
  readonly Can_you_change_your_meter_: InputMaybe<StringQueryOperatorInput>;
  readonly Can_you_switch_to_a_standard_tariff_: InputMaybe<StringQueryOperatorInput>;
  readonly Can_you_switch_when_renting: InputMaybe<StringQueryOperatorInput>;
  readonly Change_account_holder: InputMaybe<StringQueryOperatorInput>;
  readonly Change_account_holder_s_name: InputMaybe<StringQueryOperatorInput>;
  readonly Changing_account_holder_when_moving_house: InputMaybe<StringQueryOperatorInput>;
  readonly Changing_your_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Charging: InputMaybe<StringQueryOperatorInput>;
  readonly Claiming_VAT: InputMaybe<StringQueryOperatorInput>;
  readonly Claiming_compensation: InputMaybe<StringQueryOperatorInput>;
  readonly Complaints___resultion: InputMaybe<StringQueryOperatorInput>;
  readonly Complaints_about_your_supplier: InputMaybe<StringQueryOperatorInput>;
  readonly Credit_on_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  readonly DNOs___home_energy_systems: InputMaybe<StringQueryOperatorInput>;
  readonly Difference_between_serial_numbers: InputMaybe<StringQueryOperatorInput>;
  readonly Different_tariff_types: InputMaybe<StringQueryOperatorInput>;
  readonly Disadvantages: InputMaybe<StringQueryOperatorInput>;
  readonly Do_I_have_Economy_7_: InputMaybe<StringQueryOperatorInput>;
  readonly Do_all_providers_offer_dual_fuel: InputMaybe<StringQueryOperatorInput>;
  readonly Do_you_need_a_smart_meter_: InputMaybe<StringQueryOperatorInput>;
  readonly Domestication: InputMaybe<StringQueryOperatorInput>;
  readonly Dual_fuel_vs_single_fuel_tariffs: InputMaybe<StringQueryOperatorInput>;
  readonly Economy_7_prepayment: InputMaybe<StringQueryOperatorInput>;
  readonly Economy_10_meters: InputMaybe<StringQueryOperatorInput>;
  readonly Eligibility_criteria: InputMaybe<StringQueryOperatorInput>;
  readonly Environmental_impact: InputMaybe<StringQueryOperatorInput>;
  readonly Exempt___reduced_rate_products: InputMaybe<StringQueryOperatorInput>;
  readonly For_business: InputMaybe<StringQueryOperatorInput>;
  readonly Ground_source_heat_pumps: InputMaybe<StringQueryOperatorInput>;
  readonly Having_more_than_one_account_holder: InputMaybe<StringQueryOperatorInput>;
  readonly Heating: InputMaybe<StringQueryOperatorInput>;
  readonly Help_available_for_users: InputMaybe<StringQueryOperatorInput>;
  readonly Home_wind_turbines: InputMaybe<StringQueryOperatorInput>;
  readonly How_Economy_7_works: InputMaybe<StringQueryOperatorInput>;
  readonly How_biomass_works: InputMaybe<StringQueryOperatorInput>;
  readonly How_can_I_save_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_I_find_my_MPAN_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_I_find_my_MPRN_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_I_find_my_MSN_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_smart_meters_work_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_they_work_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_we_become_net_zero_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_you_know_when_to_top_up_: InputMaybe<StringQueryOperatorInput>;
  readonly How_far_does_one_charge_take_you_: InputMaybe<StringQueryOperatorInput>;
  readonly How_geothermal_works: InputMaybe<StringQueryOperatorInput>;
  readonly How_hydropower_works: InputMaybe<StringQueryOperatorInput>;
  readonly How_long_does_it_take_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_can_you_claim_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_can_you_save_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_could_you_save_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_does_it_cost_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_does_one_kWh_cost_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_energy_should_you_use_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_is_one_kWh_: InputMaybe<StringQueryOperatorInput>;
  readonly How_much_renewable_are_we_using_: InputMaybe<StringQueryOperatorInput>;
  readonly How_solar_power_works: InputMaybe<StringQueryOperatorInput>;
  readonly How_the_UK_is_working_towards_green_future: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_add_or_remove: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_apply: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_be_prepared: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_calculate_your_usage_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_claim: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_compare: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_cut_back_on_usage: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_decrease_bills_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_find_your_new_supplier: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_get_a_new_key_or_card: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_install_a_charger_at_home: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_know_if_you_have_a_dual_tariff: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_read_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_read_an_Economy_7_meter_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_report_a_gas_leak: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_report_a_power_cut: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_report_a_power_cut_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_save_energy: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_save_if_you_can_t_change_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_save_money: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_switch: InputMaybe<StringQueryOperatorInput>;
  readonly How_wind_energy_works: InputMaybe<StringQueryOperatorInput>;
  readonly I_can_t_pay_my_energy_bills: InputMaybe<StringQueryOperatorInput>;
  readonly I_have_more_than_one_MPAN: InputMaybe<StringQueryOperatorInput>;
  readonly I_haven_t_been_sent_a_bill: InputMaybe<StringQueryOperatorInput>;
  readonly If_the_account_holder_passes_away: InputMaybe<StringQueryOperatorInput>;
  readonly If_you_can_t_afford_to_top_up: InputMaybe<StringQueryOperatorInput>;
  readonly In_home_display: InputMaybe<StringQueryOperatorInput>;
  readonly In_the_UK: InputMaybe<StringQueryOperatorInput>;
  readonly Indendent_DNOs: InputMaybe<StringQueryOperatorInput>;
  readonly Installation: InputMaybe<StringQueryOperatorInput>;
  readonly Is_Economy_7_for_gas___electricity_: InputMaybe<StringQueryOperatorInput>;
  readonly Is_is_good_for_the_environment: InputMaybe<StringQueryOperatorInput>;
  readonly Is_there_a_DNO_for_gas_: InputMaybe<StringQueryOperatorInput>;
  readonly MSN_doesn_t_match_my_bill: InputMaybe<StringQueryOperatorInput>;
  readonly Making_the_most_of_Economy_7: InputMaybe<StringQueryOperatorInput>;
  readonly Moving_your_meter: InputMaybe<StringQueryOperatorInput>;
  readonly My_smart_meter_is_beeping: InputMaybe<StringQueryOperatorInput>;
  readonly Power_plants: InputMaybe<StringQueryOperatorInput>;
  readonly Priority_Services_Register: InputMaybe<StringQueryOperatorInput>;
  readonly Pros___cons: InputMaybe<StringQueryOperatorInput>;
  readonly Reading_your_electricity_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Reading_your_gas_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Reading_your_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Reading_your_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Residential_vs_business_meters: InputMaybe<StringQueryOperatorInput>;
  readonly Reviews: InputMaybe<StringQueryOperatorInput>;
  readonly Saving_money: InputMaybe<StringQueryOperatorInput>;
  readonly Should_you_switch_tariff_or_provider_: InputMaybe<StringQueryOperatorInput>;
  readonly Smart_Economy_7_meters: InputMaybe<StringQueryOperatorInput>;
  readonly Smart_meter_rollout: InputMaybe<StringQueryOperatorInput>;
  readonly Smart_meters: InputMaybe<StringQueryOperatorInput>;
  readonly Solar_energy_for_business: InputMaybe<StringQueryOperatorInput>;
  readonly Solar_panel_care: InputMaybe<StringQueryOperatorInput>;
  readonly Submitting_your_meter_readings: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_tariffs_or_providers: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_to_100__renewables: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_to_online_bills: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_to_paper: InputMaybe<StringQueryOperatorInput>;
  readonly Switching_before_you_have_a_new_supplier: InputMaybe<StringQueryOperatorInput>;
  readonly Tariffs___pricing: InputMaybe<StringQueryOperatorInput>;
  readonly Terms_on_your_energy_bill: InputMaybe<StringQueryOperatorInput>;
  readonly The_importance_of_the_water_cycle: InputMaybe<StringQueryOperatorInput>;
  readonly Things_to_know_before: InputMaybe<StringQueryOperatorInput>;
  readonly Top_tips_for_switching_as_a_tenant: InputMaybe<StringQueryOperatorInput>;
  readonly Top_up_errors: InputMaybe<StringQueryOperatorInput>;
  readonly Topping_up: InputMaybe<StringQueryOperatorInput>;
  readonly Types_of_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Types_of_renewables: InputMaybe<StringQueryOperatorInput>;
  readonly Types_of_solar_panel: InputMaybe<StringQueryOperatorInput>;
  readonly UK_average_energy_usage: InputMaybe<StringQueryOperatorInput>;
  readonly Upgrading_to_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly VAT_reduced_rates: InputMaybe<StringQueryOperatorInput>;
  readonly WIll_it_affect_my_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly WIll_it_affect_my_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  readonly What_VAT_relief_is_available_: InputMaybe<StringQueryOperatorInput>;
  readonly What_affects_a_business__usage_: InputMaybe<StringQueryOperatorInput>;
  readonly What_affects_your_usage_: InputMaybe<StringQueryOperatorInput>;
  readonly What_are_the_times_: InputMaybe<StringQueryOperatorInput>;
  readonly What_are_we_doing_to_become_net_zero_: InputMaybe<StringQueryOperatorInput>;
  readonly What_cuases_a_power_cut_: InputMaybe<StringQueryOperatorInput>;
  readonly What_does_a_bill_cover_: InputMaybe<StringQueryOperatorInput>;
  readonly What_does_it_mean_for_you_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_if_I_switch_providers_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_if_you_don_t_submit: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_if_you_switch_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_to_money_owed: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_to_unused_energy_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_to_your_tariff: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_Economy_7_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_a_DNO_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_a_kilowatt_hour_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_an_MPAN_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_an_MPRN_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_an_MSN_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_dual_fuel: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_net_zero_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_prepayment_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_the_difference_: InputMaybe<StringQueryOperatorInput>;
  readonly What_it_the_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly What_it_the_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly What_makes_energy_renewable_: InputMaybe<StringQueryOperatorInput>;
  readonly What_s_the_difference_: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_do_: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_do_before_switching: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_do_if_you_run_out_of_charge_: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_look_for_: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_look_out_for: InputMaybe<StringQueryOperatorInput>;
  readonly What_you_can_find_on_a_bill: InputMaybe<StringQueryOperatorInput>;
  readonly What_you_need_to_do: InputMaybe<StringQueryOperatorInput>;
  readonly When_is_it_paid_: InputMaybe<StringQueryOperatorInput>;
  readonly When_to_submit_your_readings: InputMaybe<StringQueryOperatorInput>;
  readonly Where_is_the_best_location_for_geothermal_: InputMaybe<StringQueryOperatorInput>;
  readonly Where_to_charge_your_EV: InputMaybe<StringQueryOperatorInput>;
  readonly Where_to_find_your_bills_online: InputMaybe<StringQueryOperatorInput>;
  readonly Which_is_better_for_you_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_is_the_best_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_meter_is_best_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_providers_offer_it_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_providers_offer_smart_meters_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_suppliers_have_gone_bust_already_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_tariffs_are_available_: InputMaybe<StringQueryOperatorInput>;
  readonly Who_can_get_dual_tariffs: InputMaybe<StringQueryOperatorInput>;
  readonly Who_is_your_DNO_: InputMaybe<StringQueryOperatorInput>;
  readonly Who_s_competing_: InputMaybe<StringQueryOperatorInput>;
  readonly Who_s_your_GDC_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_am_I_being_charged_for_paper_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_are_we_still_using_non_renewables_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_change_account_holder_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_do_I_need_an_MPAN_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_do_I_need_an_MPRN_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_do_I_need_an_MSN_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_is_it_important_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_is_my_bill_estimated_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_meter_readings_are_important: InputMaybe<StringQueryOperatorInput>;
  readonly Why_should_we_use_it_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_you_should_switch: InputMaybe<StringQueryOperatorInput>;
  readonly Will_it_affect_my_Cold_Weather_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly Will_it_affect_my_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  readonly Will_it_affect_my_Winter_Fuel_Payment_: InputMaybe<StringQueryOperatorInput>;
  readonly Will_my_supply_go_off_: InputMaybe<StringQueryOperatorInput>;
  readonly Will_you_need_a_new_key_card: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysFilterInput>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeFilterInput>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityGuideStandardPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityGuideStandardPageNavigationJsonNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityGuideStandardPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeSortInput = {
  readonly Advantages: InputMaybe<SortOrderEnum>;
  readonly Advantages_of_online: InputMaybe<SortOrderEnum>;
  readonly Advantages_of_paper: InputMaybe<SortOrderEnum>;
  readonly Are_smart_meters_dangerous_: InputMaybe<SortOrderEnum>;
  readonly Around_the_world: InputMaybe<SortOrderEnum>;
  readonly Average_energy_usage: InputMaybe<SortOrderEnum>;
  readonly Awards: InputMaybe<SortOrderEnum>;
  readonly Biomass_boilers: InputMaybe<SortOrderEnum>;
  readonly Booking_and_installation: InputMaybe<SortOrderEnum>;
  readonly Business_energy_meter_types: InputMaybe<SortOrderEnum>;
  readonly Calculating_kWh_usage: InputMaybe<SortOrderEnum>;
  readonly Calculating_usage: InputMaybe<SortOrderEnum>;
  readonly Can_someone_unplug_you_: InputMaybe<SortOrderEnum>;
  readonly Can_students_switch_: InputMaybe<SortOrderEnum>;
  readonly Can_you_change_your_meter_: InputMaybe<SortOrderEnum>;
  readonly Can_you_switch_to_a_standard_tariff_: InputMaybe<SortOrderEnum>;
  readonly Can_you_switch_when_renting: InputMaybe<SortOrderEnum>;
  readonly Change_account_holder: InputMaybe<SortOrderEnum>;
  readonly Change_account_holder_s_name: InputMaybe<SortOrderEnum>;
  readonly Changing_account_holder_when_moving_house: InputMaybe<SortOrderEnum>;
  readonly Changing_your_meter: InputMaybe<SortOrderEnum>;
  readonly Charging: InputMaybe<SortOrderEnum>;
  readonly Claiming_VAT: InputMaybe<SortOrderEnum>;
  readonly Claiming_compensation: InputMaybe<SortOrderEnum>;
  readonly Complaints___resultion: InputMaybe<SortOrderEnum>;
  readonly Complaints_about_your_supplier: InputMaybe<SortOrderEnum>;
  readonly Credit_on_prepayment_meter: InputMaybe<SortOrderEnum>;
  readonly DNOs___home_energy_systems: InputMaybe<SortOrderEnum>;
  readonly Difference_between_serial_numbers: InputMaybe<SortOrderEnum>;
  readonly Different_tariff_types: InputMaybe<SortOrderEnum>;
  readonly Disadvantages: InputMaybe<SortOrderEnum>;
  readonly Do_I_have_Economy_7_: InputMaybe<SortOrderEnum>;
  readonly Do_all_providers_offer_dual_fuel: InputMaybe<SortOrderEnum>;
  readonly Do_you_need_a_smart_meter_: InputMaybe<SortOrderEnum>;
  readonly Domestication: InputMaybe<SortOrderEnum>;
  readonly Dual_fuel_vs_single_fuel_tariffs: InputMaybe<SortOrderEnum>;
  readonly Economy_7_prepayment: InputMaybe<SortOrderEnum>;
  readonly Economy_10_meters: InputMaybe<SortOrderEnum>;
  readonly Eligibility_criteria: InputMaybe<SortOrderEnum>;
  readonly Environmental_impact: InputMaybe<SortOrderEnum>;
  readonly Exempt___reduced_rate_products: InputMaybe<SortOrderEnum>;
  readonly For_business: InputMaybe<SortOrderEnum>;
  readonly Ground_source_heat_pumps: InputMaybe<SortOrderEnum>;
  readonly Having_more_than_one_account_holder: InputMaybe<SortOrderEnum>;
  readonly Heating: InputMaybe<SortOrderEnum>;
  readonly Help_available_for_users: InputMaybe<SortOrderEnum>;
  readonly Home_wind_turbines: InputMaybe<SortOrderEnum>;
  readonly How_Economy_7_works: InputMaybe<SortOrderEnum>;
  readonly How_biomass_works: InputMaybe<SortOrderEnum>;
  readonly How_can_I_save_: InputMaybe<SortOrderEnum>;
  readonly How_do_I_find_my_MPAN_: InputMaybe<SortOrderEnum>;
  readonly How_do_I_find_my_MPRN_: InputMaybe<SortOrderEnum>;
  readonly How_do_I_find_my_MSN_: InputMaybe<SortOrderEnum>;
  readonly How_do_smart_meters_work_: InputMaybe<SortOrderEnum>;
  readonly How_do_they_work_: InputMaybe<SortOrderEnum>;
  readonly How_do_we_become_net_zero_: InputMaybe<SortOrderEnum>;
  readonly How_do_you_know_when_to_top_up_: InputMaybe<SortOrderEnum>;
  readonly How_far_does_one_charge_take_you_: InputMaybe<SortOrderEnum>;
  readonly How_geothermal_works: InputMaybe<SortOrderEnum>;
  readonly How_hydropower_works: InputMaybe<SortOrderEnum>;
  readonly How_long_does_it_take_: InputMaybe<SortOrderEnum>;
  readonly How_much_can_you_claim_: InputMaybe<SortOrderEnum>;
  readonly How_much_can_you_save_: InputMaybe<SortOrderEnum>;
  readonly How_much_could_you_save_: InputMaybe<SortOrderEnum>;
  readonly How_much_does_it_cost_: InputMaybe<SortOrderEnum>;
  readonly How_much_does_one_kWh_cost_: InputMaybe<SortOrderEnum>;
  readonly How_much_energy_should_you_use_: InputMaybe<SortOrderEnum>;
  readonly How_much_is_one_kWh_: InputMaybe<SortOrderEnum>;
  readonly How_much_renewable_are_we_using_: InputMaybe<SortOrderEnum>;
  readonly How_solar_power_works: InputMaybe<SortOrderEnum>;
  readonly How_the_UK_is_working_towards_green_future: InputMaybe<SortOrderEnum>;
  readonly How_to_add_or_remove: InputMaybe<SortOrderEnum>;
  readonly How_to_apply: InputMaybe<SortOrderEnum>;
  readonly How_to_be_prepared: InputMaybe<SortOrderEnum>;
  readonly How_to_calculate_your_usage_: InputMaybe<SortOrderEnum>;
  readonly How_to_claim: InputMaybe<SortOrderEnum>;
  readonly How_to_compare: InputMaybe<SortOrderEnum>;
  readonly How_to_cut_back_on_usage: InputMaybe<SortOrderEnum>;
  readonly How_to_decrease_bills_: InputMaybe<SortOrderEnum>;
  readonly How_to_find_your_new_supplier: InputMaybe<SortOrderEnum>;
  readonly How_to_get_a_new_key_or_card: InputMaybe<SortOrderEnum>;
  readonly How_to_install_a_charger_at_home: InputMaybe<SortOrderEnum>;
  readonly How_to_know_if_you_have_a_dual_tariff: InputMaybe<SortOrderEnum>;
  readonly How_to_read_a_smart_meter: InputMaybe<SortOrderEnum>;
  readonly How_to_read_an_Economy_7_meter_: InputMaybe<SortOrderEnum>;
  readonly How_to_report_a_gas_leak: InputMaybe<SortOrderEnum>;
  readonly How_to_report_a_power_cut: InputMaybe<SortOrderEnum>;
  readonly How_to_report_a_power_cut_: InputMaybe<SortOrderEnum>;
  readonly How_to_save_energy: InputMaybe<SortOrderEnum>;
  readonly How_to_save_if_you_can_t_change_: InputMaybe<SortOrderEnum>;
  readonly How_to_save_money: InputMaybe<SortOrderEnum>;
  readonly How_to_switch: InputMaybe<SortOrderEnum>;
  readonly How_wind_energy_works: InputMaybe<SortOrderEnum>;
  readonly I_can_t_pay_my_energy_bills: InputMaybe<SortOrderEnum>;
  readonly I_have_more_than_one_MPAN: InputMaybe<SortOrderEnum>;
  readonly I_haven_t_been_sent_a_bill: InputMaybe<SortOrderEnum>;
  readonly If_the_account_holder_passes_away: InputMaybe<SortOrderEnum>;
  readonly If_you_can_t_afford_to_top_up: InputMaybe<SortOrderEnum>;
  readonly In_home_display: InputMaybe<SortOrderEnum>;
  readonly In_the_UK: InputMaybe<SortOrderEnum>;
  readonly Indendent_DNOs: InputMaybe<SortOrderEnum>;
  readonly Installation: InputMaybe<SortOrderEnum>;
  readonly Is_Economy_7_for_gas___electricity_: InputMaybe<SortOrderEnum>;
  readonly Is_is_good_for_the_environment: InputMaybe<SortOrderEnum>;
  readonly Is_there_a_DNO_for_gas_: InputMaybe<SortOrderEnum>;
  readonly MSN_doesn_t_match_my_bill: InputMaybe<SortOrderEnum>;
  readonly Making_the_most_of_Economy_7: InputMaybe<SortOrderEnum>;
  readonly Moving_your_meter: InputMaybe<SortOrderEnum>;
  readonly My_smart_meter_is_beeping: InputMaybe<SortOrderEnum>;
  readonly Power_plants: InputMaybe<SortOrderEnum>;
  readonly Priority_Services_Register: InputMaybe<SortOrderEnum>;
  readonly Pros___cons: InputMaybe<SortOrderEnum>;
  readonly Reading_your_electricity_meter: InputMaybe<SortOrderEnum>;
  readonly Reading_your_gas_meter: InputMaybe<SortOrderEnum>;
  readonly Reading_your_meter: InputMaybe<SortOrderEnum>;
  readonly Reading_your_smart_meter: InputMaybe<SortOrderEnum>;
  readonly Residential_vs_business_meters: InputMaybe<SortOrderEnum>;
  readonly Reviews: InputMaybe<SortOrderEnum>;
  readonly Saving_money: InputMaybe<SortOrderEnum>;
  readonly Should_you_switch_tariff_or_provider_: InputMaybe<SortOrderEnum>;
  readonly Smart_Economy_7_meters: InputMaybe<SortOrderEnum>;
  readonly Smart_meter_rollout: InputMaybe<SortOrderEnum>;
  readonly Smart_meters: InputMaybe<SortOrderEnum>;
  readonly Solar_energy_for_business: InputMaybe<SortOrderEnum>;
  readonly Solar_panel_care: InputMaybe<SortOrderEnum>;
  readonly Submitting_your_meter_readings: InputMaybe<SortOrderEnum>;
  readonly Switch_tariffs_or_providers: InputMaybe<SortOrderEnum>;
  readonly Switch_to_100__renewables: InputMaybe<SortOrderEnum>;
  readonly Switch_to_online_bills: InputMaybe<SortOrderEnum>;
  readonly Switch_to_paper: InputMaybe<SortOrderEnum>;
  readonly Switching_before_you_have_a_new_supplier: InputMaybe<SortOrderEnum>;
  readonly Tariffs___pricing: InputMaybe<SortOrderEnum>;
  readonly Terms_on_your_energy_bill: InputMaybe<SortOrderEnum>;
  readonly The_importance_of_the_water_cycle: InputMaybe<SortOrderEnum>;
  readonly Things_to_know_before: InputMaybe<SortOrderEnum>;
  readonly Top_tips_for_switching_as_a_tenant: InputMaybe<SortOrderEnum>;
  readonly Top_up_errors: InputMaybe<SortOrderEnum>;
  readonly Topping_up: InputMaybe<SortOrderEnum>;
  readonly Types_of_meter: InputMaybe<SortOrderEnum>;
  readonly Types_of_renewables: InputMaybe<SortOrderEnum>;
  readonly Types_of_solar_panel: InputMaybe<SortOrderEnum>;
  readonly UK_average_energy_usage: InputMaybe<SortOrderEnum>;
  readonly Upgrading_to_a_smart_meter: InputMaybe<SortOrderEnum>;
  readonly VAT_reduced_rates: InputMaybe<SortOrderEnum>;
  readonly WIll_it_affect_my_Cold_Weather_Payment_: InputMaybe<SortOrderEnum>;
  readonly WIll_it_affect_my_Winter_Fuel_Payment_: InputMaybe<SortOrderEnum>;
  readonly Warm_Home_Discount: InputMaybe<SortOrderEnum>;
  readonly What_VAT_relief_is_available_: InputMaybe<SortOrderEnum>;
  readonly What_affects_a_business__usage_: InputMaybe<SortOrderEnum>;
  readonly What_affects_your_usage_: InputMaybe<SortOrderEnum>;
  readonly What_are_the_times_: InputMaybe<SortOrderEnum>;
  readonly What_are_we_doing_to_become_net_zero_: InputMaybe<SortOrderEnum>;
  readonly What_cuases_a_power_cut_: InputMaybe<SortOrderEnum>;
  readonly What_does_a_bill_cover_: InputMaybe<SortOrderEnum>;
  readonly What_does_it_mean_for_you_: InputMaybe<SortOrderEnum>;
  readonly What_happens_: InputMaybe<SortOrderEnum>;
  readonly What_happens_if_I_switch_providers_: InputMaybe<SortOrderEnum>;
  readonly What_happens_if_you_don_t_submit: InputMaybe<SortOrderEnum>;
  readonly What_happens_if_you_switch_: InputMaybe<SortOrderEnum>;
  readonly What_happens_to_money_owed: InputMaybe<SortOrderEnum>;
  readonly What_happens_to_unused_energy_: InputMaybe<SortOrderEnum>;
  readonly What_happens_to_your_tariff: InputMaybe<SortOrderEnum>;
  readonly What_is_Economy_7_: InputMaybe<SortOrderEnum>;
  readonly What_is_a_DNO_: InputMaybe<SortOrderEnum>;
  readonly What_is_a_kilowatt_hour_: InputMaybe<SortOrderEnum>;
  readonly What_is_an_MPAN_: InputMaybe<SortOrderEnum>;
  readonly What_is_an_MPRN_: InputMaybe<SortOrderEnum>;
  readonly What_is_an_MSN_: InputMaybe<SortOrderEnum>;
  readonly What_is_dual_fuel: InputMaybe<SortOrderEnum>;
  readonly What_is_net_zero_: InputMaybe<SortOrderEnum>;
  readonly What_is_prepayment_: InputMaybe<SortOrderEnum>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<SortOrderEnum>;
  readonly What_is_the_difference_: InputMaybe<SortOrderEnum>;
  readonly What_it_the_Cold_Weather_Payment_: InputMaybe<SortOrderEnum>;
  readonly What_it_the_Winter_Fuel_Payment_: InputMaybe<SortOrderEnum>;
  readonly What_makes_energy_renewable_: InputMaybe<SortOrderEnum>;
  readonly What_s_the_difference_: InputMaybe<SortOrderEnum>;
  readonly What_to_do_: InputMaybe<SortOrderEnum>;
  readonly What_to_do_before_switching: InputMaybe<SortOrderEnum>;
  readonly What_to_do_if_you_run_out_of_charge_: InputMaybe<SortOrderEnum>;
  readonly What_to_look_for_: InputMaybe<SortOrderEnum>;
  readonly What_to_look_out_for: InputMaybe<SortOrderEnum>;
  readonly What_you_can_find_on_a_bill: InputMaybe<SortOrderEnum>;
  readonly What_you_need_to_do: InputMaybe<SortOrderEnum>;
  readonly When_is_it_paid_: InputMaybe<SortOrderEnum>;
  readonly When_to_submit_your_readings: InputMaybe<SortOrderEnum>;
  readonly Where_is_the_best_location_for_geothermal_: InputMaybe<SortOrderEnum>;
  readonly Where_to_charge_your_EV: InputMaybe<SortOrderEnum>;
  readonly Where_to_find_your_bills_online: InputMaybe<SortOrderEnum>;
  readonly Which_is_better_for_you_: InputMaybe<SortOrderEnum>;
  readonly Which_is_the_best_: InputMaybe<SortOrderEnum>;
  readonly Which_meter_is_best_: InputMaybe<SortOrderEnum>;
  readonly Which_providers_offer_it_: InputMaybe<SortOrderEnum>;
  readonly Which_providers_offer_smart_meters_: InputMaybe<SortOrderEnum>;
  readonly Which_suppliers_have_gone_bust_already_: InputMaybe<SortOrderEnum>;
  readonly Which_tariffs_are_available_: InputMaybe<SortOrderEnum>;
  readonly Who_can_get_dual_tariffs: InputMaybe<SortOrderEnum>;
  readonly Who_is_your_DNO_: InputMaybe<SortOrderEnum>;
  readonly Who_s_competing_: InputMaybe<SortOrderEnum>;
  readonly Who_s_your_GDC_: InputMaybe<SortOrderEnum>;
  readonly Why_am_I_being_charged_for_paper_: InputMaybe<SortOrderEnum>;
  readonly Why_are_we_still_using_non_renewables_: InputMaybe<SortOrderEnum>;
  readonly Why_change_account_holder_: InputMaybe<SortOrderEnum>;
  readonly Why_do_I_need_an_MPAN_: InputMaybe<SortOrderEnum>;
  readonly Why_do_I_need_an_MPRN_: InputMaybe<SortOrderEnum>;
  readonly Why_do_I_need_an_MSN_: InputMaybe<SortOrderEnum>;
  readonly Why_is_it_important_: InputMaybe<SortOrderEnum>;
  readonly Why_is_my_bill_estimated_: InputMaybe<SortOrderEnum>;
  readonly Why_meter_readings_are_important: InputMaybe<SortOrderEnum>;
  readonly Why_should_we_use_it_: InputMaybe<SortOrderEnum>;
  readonly Why_you_should_switch: InputMaybe<SortOrderEnum>;
  readonly Will_it_affect_my_Cold_Weather_Payment_: InputMaybe<SortOrderEnum>;
  readonly Will_it_affect_my_Warm_Home_Discount_: InputMaybe<SortOrderEnum>;
  readonly Will_it_affect_my_Winter_Fuel_Payment_: InputMaybe<SortOrderEnum>;
  readonly Will_my_supply_go_off_: InputMaybe<SortOrderEnum>;
  readonly Will_you_need_a_new_key_card: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysSortInput>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityGuideStandardPageNavigationJsonNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly metaDescription: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSys>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection_minArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly node: contentfulGasElectricityProviderMainPageMetaDescriptionTextNode;
  readonly previous: Maybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly metaDescription: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysFieldSelector>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly metaDescription: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysFilterInput>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFilterInput>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderMainPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly metaDescription: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysSortInput>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityProviderMainPageMetaDescriptionTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityProviderStandardPageContentTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly content: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityProviderStandardPageContentTextNodeSys>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageContentTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>;
  readonly node: contentfulGasElectricityProviderStandardPageContentTextNode;
  readonly previous: Maybe<contentfulGasElectricityProviderStandardPageContentTextNode>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly content: InputMaybe<FieldSelectorEnum>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSysFieldSelector>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSysFilterInput>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeFilterInput>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageContentTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageContentTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageContentTextNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly content: InputMaybe<SortOrderEnum>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageContentTextNodeSysSortInput>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityProviderStandardPageContentTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly metaDescription: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSys>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  readonly node: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode;
  readonly previous: Maybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector = {
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly metaDescription: InputMaybe<FieldSelectorEnum>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysFieldSelector>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly metaDescription: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysFilterInput>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFilterInput>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSortInput = {
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly metaDescription: InputMaybe<SortOrderEnum>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysSortInput>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityProviderStandardPageMetaDescriptionTextNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNode = Node & {
  readonly Account_login: Maybe<Scalars['String']>;
  readonly Agile_Octopus: Maybe<Scalars['String']>;
  readonly Alternative_ways_to_save: Maybe<Scalars['String']>;
  readonly Alternatives_if_you_re_not_eligible: Maybe<Scalars['String']>;
  readonly Am_I_eligible_: Maybe<Scalars['String']>;
  readonly App_review: Maybe<Scalars['String']>;
  readonly Apply_for_the_Warm_Home_Discount: Maybe<Scalars['String']>;
  readonly Broader_group_eligibility: Maybe<Scalars['String']>;
  readonly Business_energy_tariffs: Maybe<Scalars['String']>;
  readonly Common_smart_meter_problems: Maybe<Scalars['String']>;
  readonly Complaints_handling: Maybe<Scalars['String']>;
  readonly Contact_SSE: Maybe<Scalars['String']>;
  readonly Contact_the_WHD_team: Maybe<Scalars['String']>;
  readonly Core_group_eligibility: Maybe<Scalars['String']>;
  readonly Customer_service: Maybe<Scalars['String']>;
  readonly Do_I_need_an_EDF_online_account_: Maybe<Scalars['String']>;
  readonly Download_the_app: Maybe<Scalars['String']>;
  readonly Emergency_credit: Maybe<Scalars['String']>;
  readonly Energy_tools: Maybe<Scalars['String']>;
  readonly Eon_Next_reviews: Maybe<Scalars['String']>;
  readonly Fix_my_smart_meter: Maybe<Scalars['String']>;
  readonly Get_a_new_top_up_key_card: Maybe<Scalars['String']>;
  readonly Getting_in_touch: Maybe<Scalars['String']>;
  readonly Give_a_meter_reading: Maybe<Scalars['String']>;
  readonly Homecare_review: Maybe<Scalars['String']>;
  readonly How_do_I_log_in_: Maybe<Scalars['String']>;
  readonly How_do_smart_tariffs_work_: Maybe<Scalars['String']>;
  readonly How_to_get_a_smart_meter: Maybe<Scalars['String']>;
  readonly How_to_get_login_details: Maybe<Scalars['String']>;
  readonly How_to_pay_bills: Maybe<Scalars['String']>;
  readonly How_to_read_a_smart_meter: Maybe<Scalars['String']>;
  readonly How_to_read_your_meter: Maybe<Scalars['String']>;
  readonly How_to_submit_a_meter_reading: Maybe<Scalars['String']>;
  readonly How_to_switch: Maybe<Scalars['String']>;
  readonly How_to_upgrade: Maybe<Scalars['String']>;
  readonly How_to_view_usage_online: Maybe<Scalars['String']>;
  readonly How_topping_up_works: Maybe<Scalars['String']>;
  readonly I_ve_forgotten_my_email: Maybe<Scalars['String']>;
  readonly I_ve_forgotten_my_password: Maybe<Scalars['String']>;
  readonly I_ve_lost_my_card___key: Maybe<Scalars['String']>;
  readonly In_home_display: Maybe<Scalars['String']>;
  readonly Installation_process: Maybe<Scalars['String']>;
  readonly Intelligent_Octopus: Maybe<Scalars['String']>;
  readonly Is_it_worth_the_money_: Maybe<Scalars['String']>;
  readonly Is_the_Warm_Home_Discount_worth_it_: Maybe<Scalars['String']>;
  readonly Make_a_complaint: Maybe<Scalars['String']>;
  readonly Manual_top_up: Maybe<Scalars['String']>;
  readonly Move_into_new_house: Maybe<Scalars['String']>;
  readonly Move_into_new_premises: Maybe<Scalars['String']>;
  readonly Moving_in_help: Maybe<Scalars['String']>;
  readonly Moving_into_a_new_house: Maybe<Scalars['String']>;
  readonly Moving_out: Maybe<Scalars['String']>;
  readonly Moving_with_a_prepayment_meter: Maybe<Scalars['String']>;
  readonly New_house_has_prepayment_meter: Maybe<Scalars['String']>;
  readonly Octopus_Go: Maybe<Scalars['String']>;
  readonly Our_verdict: Maybe<Scalars['String']>;
  readonly Pay_my_bills: Maybe<Scalars['String']>;
  readonly Report_a_power_cut: Maybe<Scalars['String']>;
  readonly Smart_meter_top_up: Maybe<Scalars['String']>;
  readonly Switch_provider_or_tariff: Maybe<Scalars['String']>;
  readonly Switch_to_SSE: Maybe<Scalars['String']>;
  readonly Talk_about_my_bill_s_: Maybe<Scalars['String']>;
  readonly Talk_about_something_else: Maybe<Scalars['String']>;
  readonly Tell_British_Gas_you_re_moving: Maybe<Scalars['String']>;
  readonly The_EDF_App: Maybe<Scalars['String']>;
  readonly Top_up_when_on_holiday___: Maybe<Scalars['String']>;
  readonly Transfer_your_tariff: Maybe<Scalars['String']>;
  readonly Troubleshoot_problems: Maybe<Scalars['String']>;
  readonly Upgrade_to_a_smart_meter: Maybe<Scalars['String']>;
  readonly Viewing_your_energy_usage_online: Maybe<Scalars['String']>;
  readonly Warm_Home_Discount: Maybe<Scalars['String']>;
  readonly What_can_I_do_through_My_Account_: Maybe<Scalars['String']>;
  readonly What_do_customers_say_: Maybe<Scalars['String']>;
  readonly What_happens_if_I_switch_: Maybe<Scalars['String']>;
  readonly What_is_EDF_Energy_My_Account_: Maybe<Scalars['String']>;
  readonly What_is_a_smart_meter_: Maybe<Scalars['String']>;
  readonly What_is_a_smart_tariff: Maybe<Scalars['String']>;
  readonly What_is_the_Warm_Home_Discount_: Maybe<Scalars['String']>;
  readonly What_to_do_when_you_move_in: Maybe<Scalars['String']>;
  readonly Where_to_top_up: Maybe<Scalars['String']>;
  readonly Which_group_are_you_: Maybe<Scalars['String']>;
  readonly Which_tariff_is_best_: Maybe<Scalars['String']>;
  readonly Which_tariff_will_I_be_on_: Maybe<Scalars['String']>;
  readonly Who_is_my_new_supplier_: Maybe<Scalars['String']>;
  readonly Why_can_t_I_log_in_: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSys>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNodeEdge>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeEdge = {
  readonly next: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly node: contentfulGasElectricityProviderStandardPageNavigationJsonNode;
  readonly previous: Maybe<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector = {
  readonly Account_login: InputMaybe<FieldSelectorEnum>;
  readonly Agile_Octopus: InputMaybe<FieldSelectorEnum>;
  readonly Alternative_ways_to_save: InputMaybe<FieldSelectorEnum>;
  readonly Alternatives_if_you_re_not_eligible: InputMaybe<FieldSelectorEnum>;
  readonly Am_I_eligible_: InputMaybe<FieldSelectorEnum>;
  readonly App_review: InputMaybe<FieldSelectorEnum>;
  readonly Apply_for_the_Warm_Home_Discount: InputMaybe<FieldSelectorEnum>;
  readonly Broader_group_eligibility: InputMaybe<FieldSelectorEnum>;
  readonly Business_energy_tariffs: InputMaybe<FieldSelectorEnum>;
  readonly Common_smart_meter_problems: InputMaybe<FieldSelectorEnum>;
  readonly Complaints_handling: InputMaybe<FieldSelectorEnum>;
  readonly Contact_SSE: InputMaybe<FieldSelectorEnum>;
  readonly Contact_the_WHD_team: InputMaybe<FieldSelectorEnum>;
  readonly Core_group_eligibility: InputMaybe<FieldSelectorEnum>;
  readonly Customer_service: InputMaybe<FieldSelectorEnum>;
  readonly Do_I_need_an_EDF_online_account_: InputMaybe<FieldSelectorEnum>;
  readonly Download_the_app: InputMaybe<FieldSelectorEnum>;
  readonly Emergency_credit: InputMaybe<FieldSelectorEnum>;
  readonly Energy_tools: InputMaybe<FieldSelectorEnum>;
  readonly Eon_Next_reviews: InputMaybe<FieldSelectorEnum>;
  readonly Fix_my_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly Get_a_new_top_up_key_card: InputMaybe<FieldSelectorEnum>;
  readonly Getting_in_touch: InputMaybe<FieldSelectorEnum>;
  readonly Give_a_meter_reading: InputMaybe<FieldSelectorEnum>;
  readonly Homecare_review: InputMaybe<FieldSelectorEnum>;
  readonly How_do_I_log_in_: InputMaybe<FieldSelectorEnum>;
  readonly How_do_smart_tariffs_work_: InputMaybe<FieldSelectorEnum>;
  readonly How_to_get_a_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly How_to_get_login_details: InputMaybe<FieldSelectorEnum>;
  readonly How_to_pay_bills: InputMaybe<FieldSelectorEnum>;
  readonly How_to_read_a_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly How_to_read_your_meter: InputMaybe<FieldSelectorEnum>;
  readonly How_to_submit_a_meter_reading: InputMaybe<FieldSelectorEnum>;
  readonly How_to_switch: InputMaybe<FieldSelectorEnum>;
  readonly How_to_upgrade: InputMaybe<FieldSelectorEnum>;
  readonly How_to_view_usage_online: InputMaybe<FieldSelectorEnum>;
  readonly How_topping_up_works: InputMaybe<FieldSelectorEnum>;
  readonly I_ve_forgotten_my_email: InputMaybe<FieldSelectorEnum>;
  readonly I_ve_forgotten_my_password: InputMaybe<FieldSelectorEnum>;
  readonly I_ve_lost_my_card___key: InputMaybe<FieldSelectorEnum>;
  readonly In_home_display: InputMaybe<FieldSelectorEnum>;
  readonly Installation_process: InputMaybe<FieldSelectorEnum>;
  readonly Intelligent_Octopus: InputMaybe<FieldSelectorEnum>;
  readonly Is_it_worth_the_money_: InputMaybe<FieldSelectorEnum>;
  readonly Is_the_Warm_Home_Discount_worth_it_: InputMaybe<FieldSelectorEnum>;
  readonly Make_a_complaint: InputMaybe<FieldSelectorEnum>;
  readonly Manual_top_up: InputMaybe<FieldSelectorEnum>;
  readonly Move_into_new_house: InputMaybe<FieldSelectorEnum>;
  readonly Move_into_new_premises: InputMaybe<FieldSelectorEnum>;
  readonly Moving_in_help: InputMaybe<FieldSelectorEnum>;
  readonly Moving_into_a_new_house: InputMaybe<FieldSelectorEnum>;
  readonly Moving_out: InputMaybe<FieldSelectorEnum>;
  readonly Moving_with_a_prepayment_meter: InputMaybe<FieldSelectorEnum>;
  readonly New_house_has_prepayment_meter: InputMaybe<FieldSelectorEnum>;
  readonly Octopus_Go: InputMaybe<FieldSelectorEnum>;
  readonly Our_verdict: InputMaybe<FieldSelectorEnum>;
  readonly Pay_my_bills: InputMaybe<FieldSelectorEnum>;
  readonly Report_a_power_cut: InputMaybe<FieldSelectorEnum>;
  readonly Smart_meter_top_up: InputMaybe<FieldSelectorEnum>;
  readonly Switch_provider_or_tariff: InputMaybe<FieldSelectorEnum>;
  readonly Switch_to_SSE: InputMaybe<FieldSelectorEnum>;
  readonly Talk_about_my_bill_s_: InputMaybe<FieldSelectorEnum>;
  readonly Talk_about_something_else: InputMaybe<FieldSelectorEnum>;
  readonly Tell_British_Gas_you_re_moving: InputMaybe<FieldSelectorEnum>;
  readonly The_EDF_App: InputMaybe<FieldSelectorEnum>;
  readonly Top_up_when_on_holiday___: InputMaybe<FieldSelectorEnum>;
  readonly Transfer_your_tariff: InputMaybe<FieldSelectorEnum>;
  readonly Troubleshoot_problems: InputMaybe<FieldSelectorEnum>;
  readonly Upgrade_to_a_smart_meter: InputMaybe<FieldSelectorEnum>;
  readonly Viewing_your_energy_usage_online: InputMaybe<FieldSelectorEnum>;
  readonly Warm_Home_Discount: InputMaybe<FieldSelectorEnum>;
  readonly What_can_I_do_through_My_Account_: InputMaybe<FieldSelectorEnum>;
  readonly What_do_customers_say_: InputMaybe<FieldSelectorEnum>;
  readonly What_happens_if_I_switch_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_EDF_Energy_My_Account_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_a_smart_meter_: InputMaybe<FieldSelectorEnum>;
  readonly What_is_a_smart_tariff: InputMaybe<FieldSelectorEnum>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<FieldSelectorEnum>;
  readonly What_to_do_when_you_move_in: InputMaybe<FieldSelectorEnum>;
  readonly Where_to_top_up: InputMaybe<FieldSelectorEnum>;
  readonly Which_group_are_you_: InputMaybe<FieldSelectorEnum>;
  readonly Which_tariff_is_best_: InputMaybe<FieldSelectorEnum>;
  readonly Which_tariff_will_I_be_on_: InputMaybe<FieldSelectorEnum>;
  readonly Who_is_my_new_supplier_: InputMaybe<FieldSelectorEnum>;
  readonly Why_can_t_I_log_in_: InputMaybe<FieldSelectorEnum>;
  readonly children: InputMaybe<NodeFieldSelector>;
  readonly id: InputMaybe<FieldSelectorEnum>;
  readonly internal: InputMaybe<InternalFieldSelector>;
  readonly parent: InputMaybe<NodeFieldSelector>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysFieldSelector>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput = {
  readonly Account_login: InputMaybe<StringQueryOperatorInput>;
  readonly Agile_Octopus: InputMaybe<StringQueryOperatorInput>;
  readonly Alternative_ways_to_save: InputMaybe<StringQueryOperatorInput>;
  readonly Alternatives_if_you_re_not_eligible: InputMaybe<StringQueryOperatorInput>;
  readonly Am_I_eligible_: InputMaybe<StringQueryOperatorInput>;
  readonly App_review: InputMaybe<StringQueryOperatorInput>;
  readonly Apply_for_the_Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  readonly Broader_group_eligibility: InputMaybe<StringQueryOperatorInput>;
  readonly Business_energy_tariffs: InputMaybe<StringQueryOperatorInput>;
  readonly Common_smart_meter_problems: InputMaybe<StringQueryOperatorInput>;
  readonly Complaints_handling: InputMaybe<StringQueryOperatorInput>;
  readonly Contact_SSE: InputMaybe<StringQueryOperatorInput>;
  readonly Contact_the_WHD_team: InputMaybe<StringQueryOperatorInput>;
  readonly Core_group_eligibility: InputMaybe<StringQueryOperatorInput>;
  readonly Customer_service: InputMaybe<StringQueryOperatorInput>;
  readonly Do_I_need_an_EDF_online_account_: InputMaybe<StringQueryOperatorInput>;
  readonly Download_the_app: InputMaybe<StringQueryOperatorInput>;
  readonly Emergency_credit: InputMaybe<StringQueryOperatorInput>;
  readonly Energy_tools: InputMaybe<StringQueryOperatorInput>;
  readonly Eon_Next_reviews: InputMaybe<StringQueryOperatorInput>;
  readonly Fix_my_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Get_a_new_top_up_key_card: InputMaybe<StringQueryOperatorInput>;
  readonly Getting_in_touch: InputMaybe<StringQueryOperatorInput>;
  readonly Give_a_meter_reading: InputMaybe<StringQueryOperatorInput>;
  readonly Homecare_review: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_I_log_in_: InputMaybe<StringQueryOperatorInput>;
  readonly How_do_smart_tariffs_work_: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_get_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_get_login_details: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_pay_bills: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_read_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_read_your_meter: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_submit_a_meter_reading: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_switch: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_upgrade: InputMaybe<StringQueryOperatorInput>;
  readonly How_to_view_usage_online: InputMaybe<StringQueryOperatorInput>;
  readonly How_topping_up_works: InputMaybe<StringQueryOperatorInput>;
  readonly I_ve_forgotten_my_email: InputMaybe<StringQueryOperatorInput>;
  readonly I_ve_forgotten_my_password: InputMaybe<StringQueryOperatorInput>;
  readonly I_ve_lost_my_card___key: InputMaybe<StringQueryOperatorInput>;
  readonly In_home_display: InputMaybe<StringQueryOperatorInput>;
  readonly Installation_process: InputMaybe<StringQueryOperatorInput>;
  readonly Intelligent_Octopus: InputMaybe<StringQueryOperatorInput>;
  readonly Is_it_worth_the_money_: InputMaybe<StringQueryOperatorInput>;
  readonly Is_the_Warm_Home_Discount_worth_it_: InputMaybe<StringQueryOperatorInput>;
  readonly Make_a_complaint: InputMaybe<StringQueryOperatorInput>;
  readonly Manual_top_up: InputMaybe<StringQueryOperatorInput>;
  readonly Move_into_new_house: InputMaybe<StringQueryOperatorInput>;
  readonly Move_into_new_premises: InputMaybe<StringQueryOperatorInput>;
  readonly Moving_in_help: InputMaybe<StringQueryOperatorInput>;
  readonly Moving_into_a_new_house: InputMaybe<StringQueryOperatorInput>;
  readonly Moving_out: InputMaybe<StringQueryOperatorInput>;
  readonly Moving_with_a_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  readonly New_house_has_prepayment_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Octopus_Go: InputMaybe<StringQueryOperatorInput>;
  readonly Our_verdict: InputMaybe<StringQueryOperatorInput>;
  readonly Pay_my_bills: InputMaybe<StringQueryOperatorInput>;
  readonly Report_a_power_cut: InputMaybe<StringQueryOperatorInput>;
  readonly Smart_meter_top_up: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_provider_or_tariff: InputMaybe<StringQueryOperatorInput>;
  readonly Switch_to_SSE: InputMaybe<StringQueryOperatorInput>;
  readonly Talk_about_my_bill_s_: InputMaybe<StringQueryOperatorInput>;
  readonly Talk_about_something_else: InputMaybe<StringQueryOperatorInput>;
  readonly Tell_British_Gas_you_re_moving: InputMaybe<StringQueryOperatorInput>;
  readonly The_EDF_App: InputMaybe<StringQueryOperatorInput>;
  readonly Top_up_when_on_holiday___: InputMaybe<StringQueryOperatorInput>;
  readonly Transfer_your_tariff: InputMaybe<StringQueryOperatorInput>;
  readonly Troubleshoot_problems: InputMaybe<StringQueryOperatorInput>;
  readonly Upgrade_to_a_smart_meter: InputMaybe<StringQueryOperatorInput>;
  readonly Viewing_your_energy_usage_online: InputMaybe<StringQueryOperatorInput>;
  readonly Warm_Home_Discount: InputMaybe<StringQueryOperatorInput>;
  readonly What_can_I_do_through_My_Account_: InputMaybe<StringQueryOperatorInput>;
  readonly What_do_customers_say_: InputMaybe<StringQueryOperatorInput>;
  readonly What_happens_if_I_switch_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_EDF_Energy_My_Account_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_a_smart_meter_: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_a_smart_tariff: InputMaybe<StringQueryOperatorInput>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<StringQueryOperatorInput>;
  readonly What_to_do_when_you_move_in: InputMaybe<StringQueryOperatorInput>;
  readonly Where_to_top_up: InputMaybe<StringQueryOperatorInput>;
  readonly Which_group_are_you_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_tariff_is_best_: InputMaybe<StringQueryOperatorInput>;
  readonly Which_tariff_will_I_be_on_: InputMaybe<StringQueryOperatorInput>;
  readonly Who_is_my_new_supplier_: InputMaybe<StringQueryOperatorInput>;
  readonly Why_can_t_I_log_in_: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysFilterInput>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterListInput = {
  readonly elemMatch: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeFilterInput>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNodeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<contentfulGasElectricityProviderStandardPageNavigationJsonNode>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection_distinctArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection_groupArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection_maxArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection_minArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};


type contentfulGasElectricityProviderStandardPageNavigationJsonNodeGroupConnection_sumArgs = {
  field: contentfulGasElectricityProviderStandardPageNavigationJsonNodeFieldSelector;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeSortInput = {
  readonly Account_login: InputMaybe<SortOrderEnum>;
  readonly Agile_Octopus: InputMaybe<SortOrderEnum>;
  readonly Alternative_ways_to_save: InputMaybe<SortOrderEnum>;
  readonly Alternatives_if_you_re_not_eligible: InputMaybe<SortOrderEnum>;
  readonly Am_I_eligible_: InputMaybe<SortOrderEnum>;
  readonly App_review: InputMaybe<SortOrderEnum>;
  readonly Apply_for_the_Warm_Home_Discount: InputMaybe<SortOrderEnum>;
  readonly Broader_group_eligibility: InputMaybe<SortOrderEnum>;
  readonly Business_energy_tariffs: InputMaybe<SortOrderEnum>;
  readonly Common_smart_meter_problems: InputMaybe<SortOrderEnum>;
  readonly Complaints_handling: InputMaybe<SortOrderEnum>;
  readonly Contact_SSE: InputMaybe<SortOrderEnum>;
  readonly Contact_the_WHD_team: InputMaybe<SortOrderEnum>;
  readonly Core_group_eligibility: InputMaybe<SortOrderEnum>;
  readonly Customer_service: InputMaybe<SortOrderEnum>;
  readonly Do_I_need_an_EDF_online_account_: InputMaybe<SortOrderEnum>;
  readonly Download_the_app: InputMaybe<SortOrderEnum>;
  readonly Emergency_credit: InputMaybe<SortOrderEnum>;
  readonly Energy_tools: InputMaybe<SortOrderEnum>;
  readonly Eon_Next_reviews: InputMaybe<SortOrderEnum>;
  readonly Fix_my_smart_meter: InputMaybe<SortOrderEnum>;
  readonly Get_a_new_top_up_key_card: InputMaybe<SortOrderEnum>;
  readonly Getting_in_touch: InputMaybe<SortOrderEnum>;
  readonly Give_a_meter_reading: InputMaybe<SortOrderEnum>;
  readonly Homecare_review: InputMaybe<SortOrderEnum>;
  readonly How_do_I_log_in_: InputMaybe<SortOrderEnum>;
  readonly How_do_smart_tariffs_work_: InputMaybe<SortOrderEnum>;
  readonly How_to_get_a_smart_meter: InputMaybe<SortOrderEnum>;
  readonly How_to_get_login_details: InputMaybe<SortOrderEnum>;
  readonly How_to_pay_bills: InputMaybe<SortOrderEnum>;
  readonly How_to_read_a_smart_meter: InputMaybe<SortOrderEnum>;
  readonly How_to_read_your_meter: InputMaybe<SortOrderEnum>;
  readonly How_to_submit_a_meter_reading: InputMaybe<SortOrderEnum>;
  readonly How_to_switch: InputMaybe<SortOrderEnum>;
  readonly How_to_upgrade: InputMaybe<SortOrderEnum>;
  readonly How_to_view_usage_online: InputMaybe<SortOrderEnum>;
  readonly How_topping_up_works: InputMaybe<SortOrderEnum>;
  readonly I_ve_forgotten_my_email: InputMaybe<SortOrderEnum>;
  readonly I_ve_forgotten_my_password: InputMaybe<SortOrderEnum>;
  readonly I_ve_lost_my_card___key: InputMaybe<SortOrderEnum>;
  readonly In_home_display: InputMaybe<SortOrderEnum>;
  readonly Installation_process: InputMaybe<SortOrderEnum>;
  readonly Intelligent_Octopus: InputMaybe<SortOrderEnum>;
  readonly Is_it_worth_the_money_: InputMaybe<SortOrderEnum>;
  readonly Is_the_Warm_Home_Discount_worth_it_: InputMaybe<SortOrderEnum>;
  readonly Make_a_complaint: InputMaybe<SortOrderEnum>;
  readonly Manual_top_up: InputMaybe<SortOrderEnum>;
  readonly Move_into_new_house: InputMaybe<SortOrderEnum>;
  readonly Move_into_new_premises: InputMaybe<SortOrderEnum>;
  readonly Moving_in_help: InputMaybe<SortOrderEnum>;
  readonly Moving_into_a_new_house: InputMaybe<SortOrderEnum>;
  readonly Moving_out: InputMaybe<SortOrderEnum>;
  readonly Moving_with_a_prepayment_meter: InputMaybe<SortOrderEnum>;
  readonly New_house_has_prepayment_meter: InputMaybe<SortOrderEnum>;
  readonly Octopus_Go: InputMaybe<SortOrderEnum>;
  readonly Our_verdict: InputMaybe<SortOrderEnum>;
  readonly Pay_my_bills: InputMaybe<SortOrderEnum>;
  readonly Report_a_power_cut: InputMaybe<SortOrderEnum>;
  readonly Smart_meter_top_up: InputMaybe<SortOrderEnum>;
  readonly Switch_provider_or_tariff: InputMaybe<SortOrderEnum>;
  readonly Switch_to_SSE: InputMaybe<SortOrderEnum>;
  readonly Talk_about_my_bill_s_: InputMaybe<SortOrderEnum>;
  readonly Talk_about_something_else: InputMaybe<SortOrderEnum>;
  readonly Tell_British_Gas_you_re_moving: InputMaybe<SortOrderEnum>;
  readonly The_EDF_App: InputMaybe<SortOrderEnum>;
  readonly Top_up_when_on_holiday___: InputMaybe<SortOrderEnum>;
  readonly Transfer_your_tariff: InputMaybe<SortOrderEnum>;
  readonly Troubleshoot_problems: InputMaybe<SortOrderEnum>;
  readonly Upgrade_to_a_smart_meter: InputMaybe<SortOrderEnum>;
  readonly Viewing_your_energy_usage_online: InputMaybe<SortOrderEnum>;
  readonly Warm_Home_Discount: InputMaybe<SortOrderEnum>;
  readonly What_can_I_do_through_My_Account_: InputMaybe<SortOrderEnum>;
  readonly What_do_customers_say_: InputMaybe<SortOrderEnum>;
  readonly What_happens_if_I_switch_: InputMaybe<SortOrderEnum>;
  readonly What_is_EDF_Energy_My_Account_: InputMaybe<SortOrderEnum>;
  readonly What_is_a_smart_meter_: InputMaybe<SortOrderEnum>;
  readonly What_is_a_smart_tariff: InputMaybe<SortOrderEnum>;
  readonly What_is_the_Warm_Home_Discount_: InputMaybe<SortOrderEnum>;
  readonly What_to_do_when_you_move_in: InputMaybe<SortOrderEnum>;
  readonly Where_to_top_up: InputMaybe<SortOrderEnum>;
  readonly Which_group_are_you_: InputMaybe<SortOrderEnum>;
  readonly Which_tariff_is_best_: InputMaybe<SortOrderEnum>;
  readonly Which_tariff_will_I_be_on_: InputMaybe<SortOrderEnum>;
  readonly Who_is_my_new_supplier_: InputMaybe<SortOrderEnum>;
  readonly Why_can_t_I_log_in_: InputMaybe<SortOrderEnum>;
  readonly children: InputMaybe<NodeSortInput>;
  readonly id: InputMaybe<SortOrderEnum>;
  readonly internal: InputMaybe<InternalSortInput>;
  readonly parent: InputMaybe<NodeSortInput>;
  readonly sys: InputMaybe<contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysSortInput>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysFieldSelector = {
  readonly type: InputMaybe<FieldSelectorEnum>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type contentfulGasElectricityProviderStandardPageNavigationJsonNodeSysSortInput = {
  readonly type: InputMaybe<SortOrderEnum>;
};

type pageBySlugQueryVariables = Exact<{
  slug: Scalars['String'];
  provider: Scalars['String'];
}>;


type pageBySlugQuery = { readonly contentfulGasElectricityProviderStandardPage: { readonly title: string | null, readonly slug: string | null, readonly category: string | null, readonly updatedAt: string | null, readonly provider: string | null, readonly metaDescription: { readonly internal: { readonly content: string | null } } | null, readonly logo: { readonly file: { readonly url: string | null } | null } | null, readonly navigation: { readonly internal: { readonly content: string | null } } | null, readonly content: { readonly internal: { readonly content: string | null } } | null } | null, readonly allContentfulGasElectricityProviderStandardPage: { readonly edges: ReadonlyArray<{ readonly node: { readonly slug: string | null, readonly category: string | null } }> } };

type relatedPagesQueryVariables = Exact<{ [key: string]: never; }>;


type relatedPagesQuery = { readonly allContentfulGasElectricityProviderMainPage: { readonly edges: ReadonlyArray<{ readonly node: { readonly slug: string | null, readonly provider: string | null, readonly logo: { readonly file: { readonly url: string | null } | null } | null } }> } };


}
